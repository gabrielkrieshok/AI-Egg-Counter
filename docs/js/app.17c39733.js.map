{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?444d","webpack:///./src/components/Toolbar.vue?30ac","webpack:///./src/plugins/i18n.js","webpack:///src/components/Toolbar.vue","webpack:///./src/components/Toolbar.vue?2909","webpack:///./src/components/Toolbar.vue","webpack:///./src/components/Loading.vue?ffbf","webpack:///src/components/Loading.vue","webpack:///./src/components/Loading.vue?f931","webpack:///./src/components/Loading.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.js","webpack:///./src/components/Vision.vue?816d","webpack:///./src/components/Image.vue?6f5b","webpack:///./src/components/Top.vue?4103","webpack:///src/components/Top.vue","webpack:///./src/components/Top.vue?bcbd","webpack:///./src/components/Top.vue","webpack:///src/components/Image.vue","webpack:///./src/components/Image.vue?b50d","webpack:///./src/components/Image.vue?8bb3","webpack:///./src/components/Analysis.vue?efb3","webpack:///src/components/Analysis.vue","webpack:///./src/components/Analysis.vue?944d","webpack:///./src/components/Analysis.vue?d1c2","webpack:///src/components/Vision.vue","webpack:///./src/components/Vision.vue?a3f1","webpack:///./src/components/Vision.vue","webpack:///./src/components/Guide.vue?2784","webpack:///src/components/Guide.vue","webpack:///./src/components/Guide.vue?4862","webpack:///./src/components/Guide.vue","webpack:///./src/components/Guide-es.vue?6d42","webpack:///src/components/Guide-es.vue","webpack:///./src/components/Guide-es.vue?6f04","webpack:///./src/components/Guide-es.vue","webpack:///./src/components/About.vue?78fa","webpack:///src/components/About.vue","webpack:///./src/components/About.vue?f71c","webpack:///./src/components/About.vue","webpack:///./src/components/About-es.vue?0752","webpack:///src/components/About-es.vue","webpack:///./src/components/About-es.vue?abd2","webpack:///./src/components/About-es.vue","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/components/Analysis.vue?6760","webpack:///./src/components/Image.vue?8cd7"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_5434f31c_render","_vm","this","_h","$createElement","_c","_self","attrs","id","componentKey","staticRenderFns","Toolbarvue_type_template_id_3a430212_render","color","absolute","staticClass","staticStyle","cursor","align-center","on","click","$event","rerender","tile","size","src","_v","localeSelect","mandatory","small","flat","changeLocale","_l","menu","item","title","to","link","dark","_s","slot","Toolbarvue_type_template_id_3a430212_staticRenderFns","Vue","use","VueI18n","messages","en","subtitle","description","Select Image","Demo Image","Select the ovitrap image type","Paper Strip","Paper-Description","Magnified","Magnified-Description","Microscope","Microscope-Description","Rotate","Remove","Analyze","Analyzing Image...","Filters","Image Threshold Adjustment","Image Threshold Adjustment Details","Minimum Egg Size","Minimum Egg Size Details","Maximum Egg Size","Maximum Egg Size Details","Maximum Cluster Size","Maximum Cluster Size Details","Egg Size Scale","Egg Size Scale Details","Too Large / Too Small","Reset","of","Source Image","Threshold","Detected Objects","Sorted Markers","Outlined Overlay","Analysis","Details","Single Eggs","Calculated from Clusters","Total Egg Estimation","Total Single Egg Area","Single Egg Average Size","Egg Clusters","Total Egg Clusters Area","Average Cluster Area","Average Eggs per Cluster","Image Size","Close","Compare","Show Filters","es","i18n","locale","fallbackLocale","Toolbarvue_type_script_lang_js_","components","0","1","languages","loading","computed","$i18n","created","_this","eventBus","$on","methods","$emit","menuItems","plugins_i18n","components_Toolbarvue_type_script_lang_js_","component","componentNormalizer","Toolbar","Loadingvue_type_template_id_63fd434e_render","persistent","width","model","callback","$$v","loadingDialog","expression","$t","indeterminate","height","Loadingvue_type_template_id_63fd434e_staticRenderFns","Loadingvue_type_script_lang_js_","watch","val","_this2","setTimeout","components_Loadingvue_type_script_lang_js_","Loading_component","Loading","Appvue_type_script_lang_js_","AppToolbar","LoadingDialogue","$router","$vuetify","goTo","offset","mounted","opencv","document","createElement","setAttribute","head","appendChild","console","log","src_Appvue_type_script_lang_js_","App_component","App","register","concat","process","ready","cached","updated","offline","error","Visionvue_type_template_id_0e3a2246_render","visionComponent","tag","Visionvue_type_template_id_0e3a2246_staticRenderFns","Imagevue_type_template_id_12f261aa_render","xs12","md6","offset-md3","grid-list-xl","imageType","row","wrap","justify-center","md4","scopedSlots","_u","fn","ref","active","toggle","class","style","resetCroppa","aspect-ratio","primary-title","croppaKey","auto-sizing","zoom-speed","placeholder","show-loading","placeholder-font-size","loading-size","show-remove-button","prevent-white-space","initial-image","initialImage","initial-image-loaded","showBottomOptions","new-image","image-remove","croppa","directives","rawName","imageSet","large","depressed","chooseFile","right","top","loadDemoImage","fixed","rotate","remove","accept","Imagevue_type_template_id_12f261aa_staticRenderFns","Topvue_type_template_id_4e5383d9_render","md10","lg10","xl6","Topvue_type_template_id_4e5383d9_staticRenderFns","Topvue_type_script_lang_js_","components_Topvue_type_script_lang_js_","Top_component","Top","Imagevue_type_script_lang_js_","AppTop","dataUrl","imageAccepted","analysisStarted","croppaDimensions","next","parseInt","image","Image","refresh","_accept","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","generateDataUrl","rawImage","sent","Promise","resolve","reject","stop","arguments","components_Imagevue_type_script_lang_js_","Image_component","components_Image","Analysisvue_type_template_id_aa3f42a4_render","fluid","md8","lg8","xl9","output","transition","reverse-transition","analyzedImage","showAnalysis","source","breakpoint","smAndDown","display-1","mdAndUp","analyzedImagesPretty","subheading","title mt-2","","shrink","justify-end","icon","previous","pl-0","pl-3","lg3","xl3","bottom","_g","max","change","analyze","threshValue","xs3","md2","xl2","mx-2","solo","hide-details","single-line","mx-3","min","minEggRadius","xs8","md5","lg4","maxEggRadius","maxEggCluster","margin","display","detailsDialog","singlesCount","singlesCalculated","totalEggs","max-width","singlesTotalArea","singlesAvg","clustersCount","clustersTotalArea","avgClusterArea","avgEggsPerCluster","imageSize","showBottom","stopPropagation","drawer","Analysisvue_type_template_id_aa3f42a4_staticRenderFns","Analysisvue_type_script_lang_js_","infoExpanded","eggsize","imageDepth","imageChannels","firstRun","analyzedImages","analysisComplete","singlesArray","clustersArray","eggBoxes","detectedObjectsArray","detectedObjectsArrayList","load","_load","turnImages","imageMenu","index","_analyze","_callee2","overlay","gray","threshold","dilate","boundingBoxes","objects","outlines","M","anchor","contours","hierarchy","contoursObject","contoursValues","contoursColor","green","blue","red","grayColor","minEggArea","maxEggArea","maxClusterArea","contourMax","cnt","rect","point1","point2","_i","_i2","legend","_context2","cv","imread","clone","imshow","depth","channels","type","Mat","zeros","rows","cols","CV_8UC3","Scalar","cvtColor","COLOR_RGBA2GRAY","THRESH_BINARY","ones","CV_8U","Point","BORDER_CONSTANT","morphologyDefaultBorderValue","MatVector","findContours","RETR_TREE","CHAIN_APPROX_SIMPLE","Math","PI","contourArea","values","toConsumableArray","boundingRect","drawContours","x","y","intPtr","rectangle","LINE_AA","roi","LINE_8","toFixed","isNaN","eggEstimate","circle","delete","_turnImages","_callee3","_context3","components_Analysisvue_type_script_lang_js_","Analysis_component","Visionvue_type_script_lang_js_","AppImage","AppAnalysis","components_Visionvue_type_script_lang_js_","Vision_component","Vision","Guidevue_type_template_id_82d451b2_render","my-3","sm6","offset-sm3","Guidevue_type_template_id_82d451b2_staticRenderFns","Guidevue_type_script_lang_js_","components_Guidevue_type_script_lang_js_","Guide_component","Guide","Guide_esvue_type_template_id_e2add5d6_render","Guide_esvue_type_template_id_e2add5d6_staticRenderFns","Guide_esvue_type_script_lang_js_","components_Guide_esvue_type_script_lang_js_","Guide_es_component","Guide_es","Aboutvue_type_template_id_d9fc601e_render","href","Aboutvue_type_template_id_d9fc601e_staticRenderFns","Aboutvue_type_script_lang_js_","components_Aboutvue_type_script_lang_js_","About_component","About","About_esvue_type_template_id_80e0e53c_render","About_esvue_type_template_id_80e0e53c_staticRenderFns","About_esvue_type_script_lang_js_","components_About_esvue_type_script_lang_js_","About_es_component","About_es","Router","router","base","routes","path","AppVision","AppGuide","AppGuideEs","AppAbout","AppAboutEs","Croppa","Vuetify","theme","primary","colors","darken4","secondary","lightBlue","accent","accent2","options","customProperties","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Analysis_vue_vue_type_style_index_0_scope_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Analysis_vue_vue_type_style_index_0_scope_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Image_vue_vue_type_style_index_0_scope_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Image_vue_vue_type_style_index_0_scope_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAGAe,KAAAhB,GAEA,MAAAO,EAAAC,OACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,IAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,qBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,cAEA,IAAAC,EAAAC,OAAA,gBAAAA,OAAA,oBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,qBAEAU,wNCtJI0C,EAAM,WAAgB,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,MAAA,CAAOC,GAAA,QAAY,CAAAH,EAAA,SAAAA,EAAA,eAAAA,EAAA,aAAAA,EAAA,eAAkEf,IAAAW,EAAAQ,eAAqBJ,EAAA,iCACpNK,EAAA,GCDIC,EAAM,WAAgB,IAAAV,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,aAAiCE,MAAA,CAAOK,MAAA,UAAAC,SAAA,GAAA7C,IAAA,KAA0C,CAAAqC,EAAA,mBAAwBS,YAAA,6BAAAC,YAAA,CAAsDC,OAAA,YAAoB,CAAAX,EAAA,YAAiBE,MAAA,CAAOU,eAAA,IAAkBC,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAAoB,cAAwB,CAAAhB,EAAA,YAAiBS,YAAA,OAAAP,MAAA,CAA0Be,KAAA,GAAAC,KAAA,OAAuB,CAAAlB,EAAA,OAAYE,MAAA,CAAOiB,IAAA,8BAAgCnB,EAAA,QAAeS,YAAA,qBAAgC,CAAAb,EAAAwB,GAAA,SAAApB,EAAA,QAA6BS,YAAA,oBAA+B,CAAAb,EAAAwB,GAAA,oBAAApB,EAAA,YAAAA,EAAA,QAAuDS,YAAA,gBAA2B,CAAAT,EAAA,gBAAqBE,MAAA,CAAOvB,MAAAiB,EAAAyB,aAAAC,UAAA,KAAyC,CAAAtB,EAAA,SAAcE,MAAA,CAAOqB,MAAA,GAAAC,KAAA,IAAqBX,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAA6B,aAAA,SAAgC,CAAA7B,EAAAwB,GAAA,QAAApB,EAAA,SAA6BE,MAAA,CAAOqB,MAAA,GAAAC,KAAA,IAAqBX,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAA6B,aAAA,SAAgC,CAAA7B,EAAAwB,GAAA,gBAAApB,EAAA,mBAA+CS,YAAA,sBAAiCb,EAAA8B,GAAA9B,EAAA+B,KAAA/B,EAAAyB,cAAA,SAAAO,GAAoD,OAAA5B,EAAA,SAAmBf,IAAA2C,EAAAC,MAAA3B,MAAA,CAAsB4B,GAAAF,EAAAG,KAAAP,KAAA,GAAAQ,KAAA,KAAoC,CAAApC,EAAAwB,GAAAxB,EAAAqC,GAAAL,EAAAC,YAA+B,GAAA7B,EAAA,UAAkBS,YAAA,oBAA+B,CAAAT,EAAA,uBAA4BE,MAAA,CAAOgC,KAAA,aAAmBA,KAAA,cAAkBlC,EAAA,SAAAJ,EAAA8B,GAAA9B,EAAA+B,KAAA/B,EAAAyB,cAAA,SAAAO,GAAiE,OAAA5B,EAAA,eAAyBf,IAAA2C,EAAAC,MAAA3B,MAAA,CAAsB4B,GAAAF,EAAAG,OAAgB,CAAA/B,EAAA,uBAAAA,EAAA,qBAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAAL,EAAAC,WAAA,SAAyF,gBACjgDM,EAAe,eCEnBC,aAAIC,IAAIC,QAER,IAAMC,EAAW,CACfC,GAAM,CACJC,SAAY,6DACZC,YAAe,6OACfC,eAAgB,eAChBC,aAAc,aACdC,gCAAiC,gCACjCC,cAAe,cACfC,oBAAqB,oHACrBC,UAAa,YACbC,wBAAyB,yIACzBC,WAAc,aACdC,yBAA0B,2EAC1BC,OAAU,SACVC,OAAU,SACVC,QAAW,UACXC,qBAAsB,qBACtBC,QAAW,UACXC,6BAA8B,6BAC9BC,qCAAsC,mFACtCC,mBAAoB,mBACpBC,2BAA4B,yHAC5BC,mBAAoB,mBACpBC,2BAA4B,kFAC5BC,uBAAwB,uBACxBC,+BAAgC,kFAChCC,iBAAkB,iBAClBC,yBAA0B,uFAC1BC,wBAAyB,wBACzBC,MAAS,QACTC,GAAM,KACNC,eAAgB,eAChBC,UAAa,YACbC,mBAAoB,mBACpBC,iBAAkB,iBAClBC,mBAAoB,mBACpBC,SAAY,WACZC,QAAW,UACXC,cAAe,cACfC,2BAA4B,2BAC5BC,uBAAwB,uBACxBC,wBAAyB,wBACzBC,0BAA2B,0BAC3BC,eAAgB,eAChBC,0BAA2B,0BAC3BC,uBAAwB,uBACxBC,2BAA4B,2BAC5BC,aAAc,aACdC,MAAS,QACTC,QAAW,UACXC,eAAgB,gBAElBC,GAAM,CACJjD,SAAY,oFACZC,YAAe,oTACfC,eAAgB,qBAChBC,aAAc,cACdC,gCAAiC,uCACjCC,cAAe,gBACfC,oBAAqB,qIACrBC,UAAa,cACbC,wBAAyB,iKACzBC,WAAc,cACdC,yBAA0B,+FAC1BC,OAAU,QACVC,OAAU,UACVC,QAAW,WACXC,qBAAsB,uBACtBC,QAAW,UACXC,6BAA8B,8BAC9BC,qCAAsC,uGACtCC,mBAAoB,0BACpBC,2BAA4B,mIAC5BC,mBAAoB,0BACpBC,2BAA4B,uFAC5BC,uBAAwB,4BACxBC,+BAAgC,8EAChCC,iBAAkB,4BAClBC,yBAA0B,4GAC1BC,wBAAyB,uCACzBC,MAAS,YACTC,GAAM,KACNC,eAAgB,mBAChBC,UAAa,SACbC,mBAAoB,qBACpBC,iBAAkB,uBAClBC,mBAAoB,0BACpBC,SAAY,WACZC,QAAW,WACXC,cAAe,sBACfC,2BAA4B,iCAC5BC,uBAAwB,6BACxBC,wBAAyB,8BACzBC,0BAA2B,mCAC3BC,eAAgB,mBAChBC,0BAA2B,kCAC3BC,uBAAwB,4BACxBC,2BAA4B,gCAC5BC,aAAc,sBACdC,MAAS,QACTC,QAAW,WACXC,eAAgB,oBAIdE,EAAO,IAAIrD,OAAQ,CACvBsD,OAAQ,KACRC,eAAgB,KAChBtD,aAGaoD,ICpEfG,EAAA,CACAC,WAAA,GAEAlK,KAHA,WAIA,OACA8F,KAAA,CACAqE,EAAA,CACA,CAAAnE,MAAA,SAAAE,KAAA,KACA,CAAAF,MAAA,QAAAE,KAAA,UACA,CAAAF,MAAA,QAAAE,KAAA,WAEAkE,EAAA,CACA,CAAApE,MAAA,SAAAE,KAAA,KACA,CAAAF,MAAA,OAAAE,KAAA,aACA,CAAAF,MAAA,eAAAE,KAAA,eAGAmE,UAAA,CACA,CAAArE,MAAA,KAAA3D,KAAA,WACA,CAAA2D,MAAA,KAAA3D,KAAA,YAEAiI,SAAA,IAGAC,SAAA,CACA/E,aADA,WAEA,aAAAxB,KAAAwG,MAAAT,OACA,EAEA,IAIAU,QAjCA,WAiCA,IAAAC,EAAA1G,KACA2G,GAAAC,IAAA,wBACAF,EAAAJ,SAAA,KAGAO,QAAA,CACA1F,SADA,WAEAwF,GAAAG,MAAA,kBAEAC,UAJA,WAKA,OAAA/G,KAAA8B,MAEAF,aAPA,SAOAmE,GACAiB,EAAAjB,YC9FiVkB,EAAA,cCOjVC,EAAgBvK,OAAAwK,EAAA,KAAAxK,CACdsK,EACAxG,EACA6B,GACF,EACA,KACA,KACA,MAIe8E,EAAAF,UClBXG,EAAM,WAAgB,IAAAtH,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBS,YAAA,0BAAqC,CAAAT,EAAA,YAAiBE,MAAA,CAAOiH,WAAA,GAAAC,MAAA,OAA8BC,MAAA,CAAQ1I,MAAAiB,EAAA,cAAA0H,SAAA,SAAAC,GAAmD3H,EAAA4H,cAAAD,GAAsBE,WAAA,kBAA6B,CAAAzH,EAAA,UAAeE,MAAA,CAAOK,MAAA,UAAAyB,KAAA,KAA6B,CAAAhC,EAAA,eAAAA,EAAA,YAAmCE,MAAA,CAAOU,eAAA,KAAmB,CAAAZ,EAAA,YAAiBS,YAAA,OAAAP,MAAA,CAA0BC,GAAA,MAAAc,KAAA,GAAAC,KAAA,OAAkC,CAAAlB,EAAA,SAAcE,MAAA,CAAOiB,IAAA,6BAAgC,GAAAvB,EAAAwB,GAAA,eAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,2CAAA1H,EAAA,qBAA6GS,YAAA,OAAAP,MAAA,CAA0ByH,cAAA,GAAApH,MAAA,QAAAqH,OAAA,SAAkD,gBAC1tBC,EAAe,GC+BnBC,EAAA,CACAjM,KADA,WAEA,OACA2L,eAAA,IAGAlB,QANA,WAMA,IAAAC,EAAA1G,KACA2G,GAAAC,IAAA,2BACAF,EAAAiB,eAAA,KAGAO,MAAA,CACAP,cADA,SACAQ,GAAA,IAAAC,EAAApI,KACAmI,GACAE,WAAA,kBAAAD,EAAAT,eAAA,WC9CiVW,EAAA,ECO7UC,EAAY5L,OAAAwK,EAAA,KAAAxK,CACd2L,EACAjB,EACAW,GACF,EACA,KACA,KACA,MAIeQ,EAAAD,UCWfE,EAAA,CACApK,KAAA,YACA6H,WAAA,CACAwC,WAAAtB,EACAuB,gBAAAH,GAEAxM,KANA,WAOA,OACAuE,aAAA,IAGAkG,QAXA,WAWA,IAAAC,EAAA1G,KACA2G,GAAAC,IAAA,2BACAF,EAAAkC,QAAAlM,KAAA,KACAgK,EAAAnG,cAAA,EACAmG,EAAAmC,SAAAC,KAAA,GACAC,OAAA,OAIAC,QApBA,WAsBA,IAAAC,EAAAC,SAAAC,cAAA,UACAF,EAAAG,aAAA,mBACAF,SAAAG,KAAAC,YAAAL,GACAM,QAAAC,IAAA,mBCtD8TC,EAAA,ECO1TC,EAAY/M,OAAAwK,EAAA,KAAAxK,CACd8M,EACA3J,EACAU,GACF,EACA,KACA,KACA,MAIemJ,EAAAD,sBCbbE,eAAQ,GAAAC,OAAIC,cAAJ,qBAA6C,CACnDC,MADmD,WAEjDR,QAAQC,IACN,uGAIJQ,OAPmD,WAQjDT,QAAQC,IAAI,6CAEdS,QAVmD,WAWjDV,QAAQC,IAAI,8CAEdU,QAbmD,WAcjDX,QAAQC,IAAI,kEAEdW,MAhBmD,SAgB5CA,GACLZ,QAAQY,MAAM,4CAA6CA,sFCtB7DC,EAAM,WAAgB,IAAArK,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAAJ,EAAAsK,gBAAA,CAA+BjL,IAAAW,EAAAQ,aAAA+J,IAAA,eACpHC,EAAe,GCDfC,EAAM,WAAgB,IAAAzK,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,eAAAA,EAAA,WAAAA,EAAA,YAAAA,EAAA,UAAmEE,MAAA,CAAOoK,KAAA,GAAAC,IAAA,GAAAC,aAAA,KAAoC,CAAAxK,EAAA,eAAoBS,YAAA,OAAAP,MAAA,CAA0BuK,eAAA,KAAmB,CAAAzK,EAAA,MAAWS,YAAA,kCAA6C,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,qCAAA1H,EAAA,gBAA+EE,MAAA,CAAOoB,UAAA,IAAe+F,MAAA,CAAQ1I,MAAAiB,EAAA,UAAA0H,SAAA,SAAAC,GAA+C3H,EAAA8K,UAAAnD,GAAkBE,WAAA,cAAyB,CAAAzH,EAAA,YAAiBE,MAAA,CAAOyK,IAAA,GAAAC,KAAA,GAAAC,iBAAA,KAAwC,CAAA7K,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAQ,IAAA,KAAoB,CAAA9K,EAAA,UAAe+K,YAAAnL,EAAAoL,GAAA,EAAqB/L,IAAA,UAAAgM,GAAA,SAAAC,GACrpB,IAAAC,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,OACA,OAAApL,EAAA,UAAoBqL,MAAAF,EAAA,iBAAAG,MAAAH,EAAA,6CAAAtK,GAAA,CAAsGC,MAAA,SAAAC,GAAyBqK,IAAAxL,EAAA2L,iBAA8B,CAAAvL,EAAA,SAAcE,MAAA,CAAOiB,IAAA,sCAAAqK,eAAA,UAAmExL,EAAA,gBAAqBE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,mBAAA1H,EAAA,OAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,wCAA8G,GAAA1H,EAAA,UAAmBE,MAAA,CAAOoK,KAAA,GAAAQ,IAAA,KAAoB,CAAA9K,EAAA,UAAe+K,YAAAnL,EAAAoL,GAAA,EAAqB/L,IAAA,UAAAgM,GAAA,SAAAC,GAC1iB,IAAAC,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,OACA,OAAApL,EAAA,UAAoBqL,MAAAF,EAAA,iBAAAG,MAAAH,EAAA,6CAAAtK,GAAA,CAAsGC,MAAA,SAAAC,GAAyBqK,IAAAxL,EAAA2L,iBAA8B,CAAAvL,EAAA,SAAcE,MAAA,CAAOiB,IAAA,0CAAAqK,eAAA,UAAuExL,EAAA,gBAAqBE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,iBAAA1H,EAAA,OAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,4CAAgH,GAAA1H,EAAA,UAAmBE,MAAA,CAAOoK,KAAA,GAAAQ,IAAA,KAAoB,CAAA9K,EAAA,UAAe+K,YAAAnL,EAAAoL,GAAA,EAAqB/L,IAAA,UAAAgM,GAAA,SAAAC,GAChjB,IAAAC,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,OACA,OAAApL,EAAA,UAAoBqL,MAAAF,EAAA,iBAAAG,MAAAH,EAAA,6CAAAtK,GAAA,CAAsGC,MAAA,SAAAC,GAAyBqK,IAAAxL,EAAA2L,iBAA8B,CAAAvL,EAAA,SAAcE,MAAA,CAAOiB,IAAA,2CAAAqK,eAAA,UAAwExL,EAAA,gBAAqBE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,kBAAA1H,EAAA,OAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,6CAAkH,uBAAA1H,EAAA,YAAyCf,IAAAW,EAAA8L,UAAAJ,MAAAzL,KAAA,iBAAAK,MAAA,CAAuDC,GAAA,cAAkB,CAAAH,EAAA,UAAeE,MAAA,CAAOyL,cAAA,GAAAC,aAAA,EAAAC,YAAA,GAAAC,gBAAA,EAAAC,wBAAA,GAAAC,eAAA,IAAAC,sBAAA,EAAAC,uBAAA,EAAAC,gBAAAvM,EAAAwM,cAA2MvL,GAAA,CAAKwL,uBAAA,SAAAtL,GAAwCnB,EAAA0M,mBAAA,GAA6BC,YAAA,SAAAxL,GAA8BnB,EAAA0M,mBAAA,GAA6BE,eAAA,SAAAzL,GAAiCnB,EAAA0M,mBAAA,IAA+BjF,MAAA,CAAQ1I,MAAAiB,EAAA,OAAA0H,SAAA,SAAAC,GAA4C3H,EAAA6M,OAAAlF,GAAeE,WAAA,WAAsB,CAAAzH,EAAA,SAAc0M,WAAA,EAAaxO,KAAA,OAAAyO,QAAA,SAAAhO,OAAAiB,EAAA6M,OAAAG,SAAAnF,WAAA,qBAAwFvH,MAAA,CAASC,GAAA,eAAAqB,KAAA,GAAAqL,MAAA,GAAAC,UAAA,GAAAtM,SAAA,IAAsEK,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAA6M,OAAAM,gBAAiC,CAAAnN,EAAAwB,GAAA,WAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,6BAAA1H,EAAA,UAA4EE,MAAA,CAAO2M,MAAA,GAAAG,MAAA,KAAuB,CAAApN,EAAAwB,GAAA,eAAApB,EAAA,SAAoC0M,WAAA,EAAaxO,KAAA,OAAAyO,QAAA,SAAAhO,OAAAiB,EAAA6M,OAAAG,SAAAnF,WAAA,qBAAwF/G,YAAA,CAAeuM,IAAA,QAAa/M,MAAA,CAAQM,SAAA,GAAAwM,MAAA,IAAyBnM,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAAsN,mBAA6B,CAAAtN,EAAAwB,GAAA,WAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,2BAAA1H,EAAA,UAA0EE,MAAA,CAAO8M,MAAA,KAAY,CAAApN,EAAAwB,GAAA,uBAAApB,EAAA,gBAAmDE,MAAA,CAAOvC,IAAA,GAAAwP,MAAA,GAAAxO,MAAAkB,KAAAyM,kBAAA1E,OAAA,OAAkE,CAAA5H,EAAA,SAAcE,MAAA,CAAOsB,KAAA,GAAAjB,MAAA,WAA4BM,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAA6M,OAAAW,YAA6B,CAAApN,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,cAAA1H,EAAA,UAAAJ,EAAAwB,GAAA,sBAAApB,EAAA,SAAsGE,MAAA,CAAOsB,KAAA,GAAAjB,MAAA,WAA4BM,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAA6M,OAAAY,YAA6B,CAAArN,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,cAAA1H,EAAA,UAAAJ,EAAAwB,GAAA,gBAAApB,EAAA,SAAgGE,MAAA,CAAOsB,KAAA,GAAAjB,MAAA,aAA8BM,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAA0N,YAAsB,CAAAtN,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,eAAA1H,EAAA,UAAAJ,EAAAwB,GAAA,+BAC53EmM,EAAe,2BCVfC,EAAM,WAAgB,IAAA5N,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBS,YAAA,cAAyB,CAAAT,EAAA,YAAiBU,YAAA,CAAaC,OAAA,WAAmBT,MAAA,CAAQ2K,iBAAA,GAAAF,IAAA,IAA6B9J,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAAoB,cAAwB,CAAAhB,EAAA,YAAiBS,YAAA,YAAAP,MAAA,CAA+Be,KAAA,GAAAC,KAAA,OAAuB,CAAAlB,EAAA,OAAYE,MAAA,CAAOiB,IAAA,8BAAgCnB,EAAA,QAAeS,YAAA,+DAA0E,CAAAT,EAAA,QAAAJ,EAAAwB,GAAA,SAAApB,EAAA,QAAwCS,YAAA,oBAA+B,CAAAb,EAAAwB,GAAA,kBAAApB,EAAA,YAA0CE,MAAA,CAAOU,eAAA,GAAAiK,iBAAA,GAAAD,KAAA,KAAiD,CAAA5K,EAAA,MAAWS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,kBAAA1H,EAAA,YAAwDE,MAAA,CAAOU,eAAA,GAAAiK,iBAAA,GAAAD,KAAA,KAAiD,CAAA5K,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAmD,KAAA,GAAAC,KAAA,GAAAC,IAAA,KAAwC,CAAA3N,EAAA,KAAUS,YAAA,mBAA8B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,8BACp4BkG,EAAe,GCyBnBC,EAAA,CACAnH,QAAA,CACA1F,SADA,WAEAwF,GAAAG,MAAA,oBC7B6UmH,EAAA,ECOzUC,EAAYvR,OAAAwK,EAAA,KAAAxK,CACdsR,EACAN,EACAI,GACF,EACA,KACA,KACA,MAIeI,EAAAD,UC+GfE,EAAA,CACAlI,WAAA,CACAmI,OAAAF,GAEAnS,KAJA,WAKA,OACA4Q,OAAA,GACAf,UAAA,EACAU,aAAA,GACA+B,QAAA,GACAC,eAAA,EACAjI,SAAA,EACAqB,eAAA,EACA6G,iBAAA,EACA/B,mBAAA,EACA5B,UAAA,IAGAtE,SAAA,CACAkI,iBADA,WAEA,WAAAzO,KAAA6K,UAAA,8BACA,IAAA7K,KAAA6K,UAAA,8BACA,IAAA7K,KAAA6K,UAAA,6BACA,iCAGA3C,MAAA,CACAP,cADA,SACAQ,GAAA,IAAAzB,EAAA1G,KACAmI,GACAE,WAAA,kBAAA3B,EAAAiB,eAAA,UAIAd,QAAA,CAKA6E,YALA,WAMA1L,KAAAuM,aAAA,KACAvM,KAAA6L,WAAA,GAEA6C,KATA,WAUA,IAAApD,EAAAqD,SAAA3O,KAAAsL,QACAtL,KAAAsL,SAAA,EAAAA,EAAA,KAEA+B,cAbA,WAcA,IAAAuB,EAAA,IAAAC,MACA,IAAA7O,KAAA6K,YAAA+D,EAAAtN,IAAA,iCACA,IAAAtB,KAAA6K,YAAA+D,EAAAtN,IAAA,qCACA,IAAAtB,KAAA6K,YAAA+D,EAAAtN,IAAA,sCACAtB,KAAAuM,aAAAqC,EACA5O,KAAA4M,OAAAkC,UACA9O,KAAA6I,SAAAC,KAAA,kBAGA2E,OAvBA,eAAAsB,EAAApS,OAAAqS,EAAA,KAAArS,CAAAsS,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAlE,KAAA,SAAAqE,GAAA,eAAAA,EAAAC,KAAAD,EAAAV,MAAA,cAwBA/H,GAAAG,MAAA,cACAH,GAAAG,MAAA,cACAH,GAAAG,MAAA,iBACA9G,KAAAwO,iBAAA,EA3BAY,EAAAV,KAAA,EA4BA1O,KAAA4M,OAAA0C,gBAAA,MA5BA,cA4BAtP,KAAAuP,SA5BAH,EAAAI,KA6BA7I,GAAAG,MAAA,YAAA9G,KAAA6K,WA7BAuE,EAAAV,KAAA,GA8BA/H,GAAAG,MAAA,gBAAA9G,KAAAuP,UA9BA,eA+BAvP,KAAAuO,eAAA,EA/BAa,EAAAV,KAAA,GAgCA,IAAAe,QAAA,SAAAC,EAAAC,GAAA,OAAAtH,WAAAqH,EAAA,OAhCA,yBAAAN,EAAAQ,SAAAT,EAAAnP,SAAA,SAAAyN,IAAA,OAAAsB,EAAA5R,MAAA6C,KAAA6P,WAAA,OAAApC,EAAA,KClK+UqC,EAAA,ECQ3UC,aAAYpT,OAAAwK,EAAA,KAAAxK,CACdmT,EACAtF,EACAkD,GACF,EACA,KACA,KACA,OAIesC,EAAAD,UCnBXE,EAAM,WAAgB,IAAAlQ,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,eAAmCE,MAAA,CAAO6P,MAAA,KAAY,CAAA/P,EAAA,YAAiBE,MAAA,CAAOyK,IAAA,GAAAC,KAAA,KAAoB,CAAA5K,EAAA,UAAe0M,WAAA,EAAaxO,KAAA,OAAAyO,QAAA,SAAAhO,MAAAiB,EAAA,gBAAA6H,WAAA,oBAAsFvH,MAAA,CAASoK,KAAA,GAAA0F,IAAA,GAAAC,IAAA,GAAAC,IAAA,KAAsC,CAAAlQ,EAAA,YAAiBS,YAAA,cAAA4G,MAAA,CAAiC1I,MAAAiB,EAAA,OAAA0H,SAAA,SAAAC,GAA4C3H,EAAAJ,OAAA+H,GAAeE,WAAA,WAAsB7H,EAAA8B,GAAA9B,EAAA,wBAAAgC,GAA4C,OAAA5B,EAAA,iBAA2Bf,IAAA2C,EAAAuO,OAAAjQ,MAAA,CAAuBkQ,YAAA,EAAAC,sBAAA,IAA+C,CAAArQ,EAAA,UAAe0M,WAAA,EAAaxO,KAAA,OAAAyO,QAAA,SAAAhO,MAAAiB,EAAA,aAAA6H,WAAA,iBAAgFhH,YAAA,mBAAAP,MAAA,CAAwCC,GAAAyB,EAAAuO,SAAkB,CAAAnQ,EAAA,OAAYS,YAAA,mBAAAC,YAAA,CAA4CkH,OAAA,SAAiB1H,MAAA,CAAQC,GAAA,gBAAAgB,IAAAvB,EAAA0Q,mBAA8CtQ,EAAA,UAAiB0M,WAAA,EAAaxO,KAAA,OAAAyO,QAAA,SAAAhO,OAAAiB,EAAA2Q,aAAA9I,WAAA,kBAAkFhH,YAAA,mBAAAP,MAAA,CAAwCC,GAAAyB,EAAA4O,SAAkB,CAAAxQ,EAAA,OAAYS,YAAA,mBAAAP,MAAA,CAAsCC,GAAA,gBAAAgB,IAAAvB,EAAA0Q,uBAAoD,GAAAtQ,EAAA,UAAkBS,YAAA,QAAmB,CAAAT,EAAA,gBAAAA,EAAA,YAAoCE,MAAA,CAAOU,eAAA,GAAAgK,KAAA,KAA6B,CAAA5K,EAAA,UAAAA,EAAA,MAAwBqL,MAAA,CAAOxJ,MAAAjC,EAAA8I,SAAA+H,WAAAC,UAAAC,YAAA/Q,EAAA8I,SAAA+H,WAAAG,UAA0F,CAAAhR,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAAiR,qBAAAhR,KAAAL,YAAAQ,EAAA,MAAmEqL,MAAA,CAAOyF,WAAAlR,EAAA8I,SAAA+H,WAAAC,UAAAK,aAAAnR,EAAA8I,SAAA+H,WAAAG,UAAgG,CAAAhR,EAAAwB,GAAA,IAAAxB,EAAAqC,GAAApC,KAAAL,OAAA,OAAAI,EAAAqC,GAAArC,EAAA8H,GAAA,WAAA9H,EAAAqC,GAAApC,KAAAxD,QAAA,SAAA2D,EAAA,YAAAA,EAAA,YAA2HqL,MAAA,CAAO2F,GAAApR,EAAA8I,SAAA+H,WAAAC,UAAAO,OAAArR,EAAA8I,SAAA+H,WAAAG,SAAiF1Q,MAAA,CAAQgR,cAAA,GAAAvG,IAAA,KAA2B,CAAA3K,EAAA,UAAeS,YAAA,iBAAAP,MAAA,CAAoC+Q,OAAA,KAAa,CAAAjR,EAAA,SAAcE,MAAA,CAAOiR,KAAA,GAAA5Q,MAAA,WAA4BM,GAAA,CAAKC,MAAAlB,EAAAwR,WAAsB,CAAApR,EAAA,UAAAJ,EAAAwB,GAAA,0BAAApB,EAAA,UAA6DS,YAAA,iBAAAP,MAAA,CAAoC+Q,OAAA,KAAa,CAAAjR,EAAA,SAAcE,MAAA,CAAOiR,KAAA,GAAA5Q,MAAA,WAA4BM,GAAA,CAAKC,MAAAlB,EAAA2O,OAAkB,CAAAvO,EAAA,UAAAJ,EAAAwB,GAAA,+CAAApB,EAAA,UAAkF0M,WAAA,EAAaxO,KAAA,OAAAyO,QAAA,SAAAhO,MAAAiB,EAAA,iBAAA6H,WAAA,qBAAwF4D,MAAA,CAASgG,OAAAzR,EAAA8I,SAAA+H,WAAAC,UAAAY,OAAA1R,EAAA8I,SAAA+H,WAAAG,SAAmF1Q,MAAA,CAAQoK,KAAA,GAAAQ,IAAA,GAAAyG,IAAA,GAAAC,IAAA,KAAsC,CAAAxR,EAAA,OAAY0M,WAAA,EAAaxO,KAAA,OAAAyO,QAAA,SAAAhO,MAAAiB,EAAA,OAAA6H,WAAA,YAAsE,CAAAzH,EAAA,UAAeS,YAAA,QAAmB,CAAAT,EAAA,gBAAAA,EAAA,MAA8BS,YAAA,SAAoB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,iBAAA1H,EAAA,eAA0DS,YAAA,QAAmB,CAAAT,EAAA,YAAAA,EAAA,aAAiCE,MAAA,CAAOuR,OAAA,IAAY1G,YAAAnL,EAAAoL,GAAA,EAAsB/L,IAAA,YAAAgM,GAAA,SAAAC,GACpvF,IAAArK,EAAAqK,EAAArK,GACA,OAAAb,EAAA,UAAqBS,YAAA,cAAyB,CAAAT,EAAA,OAAAJ,EAAA8R,GAAA,GAAqB7Q,GAAA,CAAAjB,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,0CAAoE,CAAA1H,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,gDAAA1H,EAAA,YAAiGE,MAAA,CAAOyK,IAAA,KAAU,CAAA3K,EAAA,UAAAA,EAAA,YAA8BE,MAAA,CAAOyR,IAAA,KAAU9Q,GAAA,CAAK+Q,OAAA,SAAA7Q,GAA0B,OAAAnB,EAAAiS,YAAsBxK,MAAA,CAAQ1I,MAAAiB,EAAA,YAAA0H,SAAA,SAAAC,GAAiD3H,EAAAkS,YAAAvK,GAAoBE,WAAA,kBAA2B,GAAAzH,EAAA,UAAmBE,MAAA,CAAO6R,IAAA,GAAAC,IAAA,GAAAC,IAAA,GAAAC,OAAA,KAAsC,CAAAlS,EAAA,gBAAqBS,YAAA,SAAAP,MAAA,CAA4BiS,KAAA,GAAAC,eAAA,GAAAC,cAAA,IAA6ChL,MAAA,CAAQ1I,MAAAiB,EAAA,YAAA0H,SAAA,SAAAC,GAAiD3H,EAAAkS,YAAAvK,GAAoBE,WAAA,kBAA2B,OAAAzH,EAAA,YAAAA,EAAA,aAAyCE,MAAA,CAAOuR,OAAA,IAAY1G,YAAAnL,EAAAoL,GAAA,EAAsB/L,IAAA,YAAAgM,GAAA,SAAAC,GAC7xB,IAAArK,EAAAqK,EAAArK,GACA,OAAAb,EAAA,UAAqBS,YAAA,cAAyB,CAAAT,EAAA,OAAAJ,EAAA8R,GAAA,GAAqB7Q,GAAA,CAAAjB,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,gCAA0D,CAAA1H,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,sCAAA1H,EAAA,YAAuFE,MAAA,CAAOyK,IAAA,KAAU,CAAA3K,EAAA,UAAeE,MAAA,CAAOoS,OAAA,KAAW,CAAAtS,EAAA,YAAiBE,MAAA,CAAOqS,IAAA,EAAAZ,IAAA,KAAkB9Q,GAAA,CAAK+Q,OAAA,SAAA7Q,GAA0B,OAAAnB,EAAAiS,YAAsBxK,MAAA,CAAQ1I,MAAAiB,EAAA,aAAA0H,SAAA,SAAAC,GAAkD3H,EAAA4S,aAAAjL,GAAqBE,WAAA,mBAA4B,GAAAzH,EAAA,UAAmBE,MAAA,CAAOuS,IAAA,GAAAC,IAAA,GAAAC,IAAA,GAAAnB,IAAA,KAAqC,CAAAxR,EAAA,gBAAqBE,MAAA,CAAOiS,KAAA,GAAAC,eAAA,GAAAC,cAAA,IAA6ChL,MAAA,CAAQ1I,MAAAiB,EAAA,aAAA0H,SAAA,SAAAC,GAAkD3H,EAAA4S,aAAAjL,GAAqBE,WAAA,mBAA4B,OAAAzH,EAAA,YAAAA,EAAA,aAAyCE,MAAA,CAAOuR,OAAA,IAAY1G,YAAAnL,EAAAoL,GAAA,EAAsB/L,IAAA,YAAAgM,GAAA,SAAAC,GACrxB,IAAArK,EAAAqK,EAAArK,GACA,OAAAb,EAAA,UAAqBS,YAAA,cAAyB,CAAAT,EAAA,OAAAJ,EAAA8R,GAAA,GAAqB7Q,GAAA,CAAAjB,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,gCAA0D,CAAA1H,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,sCAAA1H,EAAA,YAAuFE,MAAA,CAAOyK,IAAA,KAAU,CAAA3K,EAAA,UAAeE,MAAA,CAAOoS,OAAA,KAAW,CAAAtS,EAAA,YAAiBE,MAAA,CAAOqS,IAAA,EAAAZ,IAAA,KAAkB9Q,GAAA,CAAK+Q,OAAA,SAAA7Q,GAA0B,OAAAnB,EAAAiS,YAAsBxK,MAAA,CAAQ1I,MAAAiB,EAAA,aAAA0H,SAAA,SAAAC,GAAkD3H,EAAAgT,aAAArL,GAAqBE,WAAA,mBAA4B,GAAAzH,EAAA,UAAmBE,MAAA,CAAOuS,IAAA,GAAAC,IAAA,GAAAC,IAAA,GAAAnB,IAAA,KAAqC,CAAAxR,EAAA,gBAAqBE,MAAA,CAAOiS,KAAA,GAAAC,eAAA,GAAAC,cAAA,IAA6ChL,MAAA,CAAQ1I,MAAAiB,EAAA,aAAA0H,SAAA,SAAAC,GAAkD3H,EAAAgT,aAAArL,GAAqBE,WAAA,mBAA4B,OAAAzH,EAAA,YAAAA,EAAA,aAAyCE,MAAA,CAAOuR,OAAA,IAAY1G,YAAAnL,EAAAoL,GAAA,EAAsB/L,IAAA,YAAAgM,GAAA,SAAAC,GACrxB,IAAArK,EAAAqK,EAAArK,GACA,OAAAb,EAAA,UAAqBS,YAAA,cAAyB,CAAAT,EAAA,OAAAJ,EAAA8R,GAAA,GAAqB7Q,GAAA,CAAAjB,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,oCAA8D,CAAA1H,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,0CAAA1H,EAAA,YAA2FE,MAAA,CAAOyK,IAAA,KAAU,CAAA3K,EAAA,UAAeE,MAAA,CAAOoS,OAAA,KAAW,CAAAtS,EAAA,YAAiBE,MAAA,CAAOqS,IAAA,EAAAZ,IAAA,KAAkB9Q,GAAA,CAAK+Q,OAAA,SAAA7Q,GAA0B,OAAAnB,EAAAiS,YAAsBxK,MAAA,CAAQ1I,MAAAiB,EAAA,cAAA0H,SAAA,SAAAC,GAAmD3H,EAAAiT,cAAAtL,GAAsBE,WAAA,oBAA6B,GAAAzH,EAAA,UAAmBE,MAAA,CAAOuS,IAAA,GAAAC,IAAA,GAAAC,IAAA,GAAAnB,IAAA,KAAqC,CAAAxR,EAAA,gBAAqBE,MAAA,CAAOiS,KAAA,GAAAC,eAAA,GAAAC,cAAA,IAA6ChL,MAAA,CAAQ1I,MAAAiB,EAAA,cAAA0H,SAAA,SAAAC,GAAmD3H,EAAAiT,cAAAtL,GAAsBE,WAAA,oBAA6B,OAAAzH,EAAA,YAAyBE,MAAA,CAAOyK,IAAA,GAAAC,KAAA,GAAAhK,eAAA,KAAsC,CAAAZ,EAAA,aAAkBE,MAAA,CAAOuR,OAAA,IAAY1G,YAAAnL,EAAAoL,GAAA,EAAsB/L,IAAA,YAAAgM,GAAA,SAAAC,GACl1B,IAAArK,EAAAqK,EAAArK,GACA,OAAAb,EAAA,UAAqBS,YAAA,mBAA8B,CAAAT,EAAA,OAAAJ,EAAA8R,GAAA,GAAqB7Q,GAAA,CAAAb,EAAA,KAAcS,YAAA,QAAmB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,sBAAA1H,EAAA,KAAqDS,YAAA,gBAA2B,CAAAT,EAAA,UAAeE,MAAA,CAAOqB,MAAA,GAAAhB,MAAA,yBAA2C,CAAAX,EAAAwB,GAAA,yBAAAxB,EAAAwB,GAAA,IAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,0BAAA1H,EAAA,KAA6FS,YAAA,gBAA2B,CAAAT,EAAA,UAAeE,MAAA,CAAOqB,MAAA,GAAAhB,MAAA,yBAA2C,CAAAX,EAAAwB,GAAA,yBAAAxB,EAAAwB,GAAA,IAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,0BAAA1H,EAAA,KAA6FS,YAAA,gBAA2B,CAAAT,EAAA,UAAeE,MAAA,CAAOqB,MAAA,GAAAhB,MAAA,6BAA+C,CAAAX,EAAAwB,GAAA,yBAAAxB,EAAAwB,GAAA,IAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,yCAAmG,CAAA1H,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,gCAAA1H,EAAA,UAAAA,EAAA,UAA4FU,YAAA,CAAaoS,OAAA,OAAAC,QAAA,SAAkC7S,MAAA,CAAQC,GAAA,iBAAqB,CAAAH,EAAA,OAAYE,MAAA,CAAOC,GAAA,cAAAgB,IAAA,oCAAsD,eAAAnB,EAAA,UAAAA,EAAA,gBAAsDS,YAAA,eAA0B,CAAAT,EAAA,MAAWS,YAAA,SAAoB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,gBAAA1H,EAAA,YAAAA,EAAA,SAAkES,YAAA,OAAAP,MAAA,CAA0BK,MAAA,UAAAyB,KAAA,IAA4BnB,GAAA,CAAKC,MAAA,SAAAC,GAAyBnB,EAAAoT,eAAA,KAA2B,CAAApT,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,mBAAA1H,EAAA,aAAAA,EAAA,UAAAA,EAAA,eAAAA,EAAA,uBAAmHS,YAAA,UAAqB,CAAAT,EAAA,QAAAA,EAAA,UAA0BE,MAAA,CAAOqB,MAAA,GAAAhB,MAAA,yBAA2C,CAAAX,EAAAwB,GAAA,yBAAAxB,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,uBAAA1H,EAAA,uBAAwGS,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAAoT,kBAAA,GAAAjT,EAAA,eAAAA,EAAA,uBAAsFS,YAAA,UAAqB,CAAAT,EAAA,QAAAA,EAAA,UAA0BE,MAAA,CAAOqB,MAAA,GAAAhB,MAAA,yBAA2C,CAAAX,EAAAwB,GAAA,yBAAAxB,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,oCAAA1H,EAAA,uBAAqHS,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAAqT,uBAAA,GAAAlT,EAAA,aAAAA,EAAA,eAAAA,EAAA,uBAA2GS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,4BAAA1H,EAAA,uBAA6ES,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAAsT,eAAA,eAAAnT,EAAA,YAAkEE,MAAA,CAAOkT,YAAA,SAAoB/L,MAAA,CAAQ1I,MAAAiB,EAAA,cAAA0H,SAAA,SAAAC,GAAmD3H,EAAAoT,cAAAzL,GAAsBE,WAAA,kBAA6B,CAAAzH,EAAA,UAAAA,EAAA,gBAAAA,EAAA,MAA2CS,YAAA,cAAyB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,iBAAA1H,EAAA,eAAAA,EAAA,UAAAA,EAAA,eAAAA,EAAA,uBAAmHS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,6BAAA1H,EAAA,uBAA8ES,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAAwT,sBAAA,GAAArT,EAAA,eAAAA,EAAA,uBAA0FS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,+BAAA1H,EAAA,uBAAgFS,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAAyT,gBAAA,GAAAtT,EAAA,eAAAA,EAAA,uBAAoFS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,oBAAA1H,EAAA,uBAAqES,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAA0T,mBAAA,GAAAvT,EAAA,eAAAA,EAAA,uBAAuFS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,+BAAA1H,EAAA,uBAAgFS,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAA2T,uBAAA,GAAAxT,EAAA,eAAAA,EAAA,uBAA2FS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,4BAAA1H,EAAA,uBAA6ES,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAA4T,oBAAA,GAAAzT,EAAA,eAAAA,EAAA,uBAAwFS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,gCAAA1H,EAAA,uBAAiFS,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAA6T,uBAAA,GAAA1T,EAAA,eAAAA,EAAA,uBAA2FS,YAAA,UAAqB,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,kBAAA1H,EAAA,uBAAmES,YAAA,oBAA+B,CAAAb,EAAAwB,GAAAxB,EAAAqC,GAAApC,KAAA8T,eAAA,WAAA3T,EAAA,kBAAAA,EAAA,YAAAA,EAAA,SAA+FE,MAAA,CAAOK,MAAA,UAAAiB,KAAA,IAA4BX,GAAA,CAAKC,MAAA,SAAAC,GAAyBnB,EAAAoT,eAAA,KAA0B,CAAApT,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,6BAAA1H,EAAA,gBAAuEE,MAAA,CAAOvC,IAAA,GAAAwP,MAAA,GAAAxO,MAAAkB,KAAA+T,WAAAhM,OAAA,OAA2D,CAAA5H,EAAA,SAAcE,MAAA,CAAOsB,KAAA,GAAAjB,MAAA,WAA4BM,GAAA,CAAKC,MAAA,SAAAC,GAAyB,OAAAnB,EAAAoB,cAAwB,CAAAhB,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,aAAA1H,EAAA,UAAAJ,EAAAwB,GAAA,iBAAApB,EAAA,SAAgGE,MAAA,CAAOsB,KAAA,GAAAjB,MAAA,WAA4BM,GAAA,CAAKC,MAAA,SAAAC,GAAyBnB,EAAA2Q,cAAA3Q,EAAA2Q,gBAAuC,CAAAvQ,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,eAAA1H,EAAA,UAAAJ,EAAAwB,GAAA,iBAAApB,EAAA,SAAkGE,MAAA,CAAOsB,KAAA,GAAAjB,MAAA,WAA4BM,GAAA,CAAKC,MAAA,SAAAC,GAAyBA,EAAA8S,kBAAyBjU,EAAAkU,QAAAlU,EAAAkU,UAA2B,CAAA9T,EAAA,QAAAJ,EAAAwB,GAAAxB,EAAAqC,GAAArC,EAAA8H,GAAA,oBAAA1H,EAAA,UAAAJ,EAAAwB,GAAA,2BAChtJ2S,EAAe,eC+PnBC,uBAAA,CACAnY,KADA,WAEA,OACAiY,QAAA,EACAG,cAAA,EACAC,QAAA,KACA5D,cAAA,KACAqD,UAAA,GACAQ,WAAA,GACAC,cAAA,GACA1J,UAAA,GACA6F,cAAA,EACAqD,YAAA,EACAS,UAAA,EACAlJ,OAAA,KACAmJ,eAAA,EACAnE,OAAA,MAAAK,OAAA,SACAL,OAAA,YAAAK,OAAA,SACAL,OAAA,UAAAK,OAAA,SACAL,OAAA,WAAAK,OAAA,SACAL,OAAA,UAAAK,OAAA,SAEAK,qBAAA,CACAhR,KAAAwG,MAAAzH,EAAA,gBACAiB,KAAAwG,MAAAzH,EAAA,aACAiB,KAAAwG,MAAAzH,EAAA,oBACAiB,KAAAwG,MAAAzH,EAAA,kBACAiB,KAAAwG,MAAAzH,EAAA,qBAEAyP,iBAAA,EACAkG,kBAAA,EACAzC,YAAA,IACAU,aAAA,EACAI,aAAA,GACAC,cAAA,GACAI,aAAA,EACAM,cAAA,EACAiB,aAAA,GACAnB,iBAAA,EACAG,kBAAA,EACAC,eAAA,EACAC,kBAAA,EACAJ,WAAA,EACAmB,cAAA,GACAvB,kBAAA,EACAwB,SAAA,EACAC,qBAAA,GACAC,yBAAA,GACAzB,UAAA,EACA3T,OAAA,EACAnD,OAAA,EACA2W,eAAA,IAGA1M,QAtDA,WAsDA,IAAAC,EAAA1G,KACA2G,GAAAC,IAAA,qBAAAiE,GACA,IAAAA,GACAnE,EAAAuL,YAAA,IACAvL,EAAAiM,aAAA,EACAjM,EAAAqM,aAAA,EACArM,EAAAsM,cAAA,GACA,IAAAnI,GACAnE,EAAAuL,YAAA,IACAvL,EAAAiM,aAAA,EACAjM,EAAAqM,aAAA,GACArM,EAAAsM,cAAA,KAEAtM,EAAAuL,YAAA,IACAvL,EAAAiM,aAAA,EACAjM,EAAAqM,aAAA,GACArM,EAAAsM,cAAA,MAGArM,GAAAC,IAAA,yBAAA5K,GACA0K,EAAA+J,cAAAzU,EACA0K,EAAAsO,UAGAnO,QAAA,CACAmO,KADA,eAAAC,EAAAtY,OAAAqS,EAAA,KAAArS,CAAAsS,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAlE,KAAA,SAAAqE,GAAA,eAAAA,EAAAC,KAAAD,EAAAV,MAAA,cAEA/H,GAAAG,MAAA,iBAFAsI,EAAAV,KAAA,EAGA,IAAAe,QAAA,SAAAC,EAAAC,GAAA,OAAAtH,WAAAqH,EAAA,OAHA,OAIA1P,KAAAgS,UACAhS,KAAAkV,aALA,wBAAA9F,EAAAQ,SAAAT,EAAAnP,SAAA,SAAAgV,IAAA,OAAAC,EAAA9X,MAAA6C,KAAA6P,WAAA,OAAAmF,EAAA,GAOA7T,SAPA,WAQAwF,GAAAG,MAAA,kBAEAqO,UAVA,SAUAC,GACApV,KAAAsL,OAAA8J,GAEA1G,KAbA,WAcA1O,KAAAL,OAAAK,KAAAL,OAAA,IAAAK,KAAAxD,OACA,EACAwD,KAAAL,OAAA,GAEA4R,SAlBA,WAmBAvR,KAAAL,OAAAK,KAAAL,OAAA,IACAK,KAAAxD,OAAA,EACAwD,KAAAL,OAAA,GAEAqS,QAvBA,eAAAqD,EAAA1Y,OAAAqS,EAAA,KAAArS,CAAAsS,mBAAAC,KAAA,SAAAoG,IAAA,IAAAhU,EAAAiU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArB,EAAAsB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAra,EAAAsa,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlI,mBAAAlE,KAAA,SAAAqM,GAAA,eAAAA,EAAA/H,KAAA+H,EAAA1I,MAAA,OA4FA,IAnEA1O,KAAAwO,iBAAA,EAIAlN,EAAA+V,GAAAC,OAAA,iBACA/B,EAAAjU,EAAAiW,QAGAF,GAAAG,OAAA,MAAAlW,GAGAtB,KAAA8T,UAAAxS,EAAAD,OAAAkG,MAAA,MAAAjG,EAAAD,OAAA0G,OACA/H,KAAAsU,WAAAhT,EAAAmW,QACAzX,KAAAuU,cAAAjT,EAAAoW,WACA1X,KAAA6K,UAAAvJ,EAAAqW,OAGAnC,EAAA,IAAA6B,GAAAO,IACAnC,EAAA,IAAA4B,GAAAO,IACAlC,EAAA,IAAA2B,GAAAO,IACAjC,EAAA,IAAA0B,GAAAO,IACAhC,EAAAyB,GAAAO,IAAAC,MAAAvW,EAAAwW,KAAAxW,EAAAyW,KAAAV,GAAAW,SACAnC,EAAA,IAAAwB,GAAAO,IAAAtW,EAAAwW,KAAAxW,EAAAyW,KAAAV,GAAAW,QAAA,IAAAX,GAAAY,OAAA,gBAIAZ,GAAAa,SAAA5W,EAAAkU,EAAA6B,GAAAc,iBAGAd,GAAA5B,UAAAD,EAAAC,EAAAzV,KAAAiS,YAAA,IAAAoF,GAAAe,eAGAtC,EAAAuB,GAAAO,IAAAS,KAAA,IAAAhB,GAAAiB,OACAvC,EAAA,IAAAsB,GAAAkB,OAAA,MACAlB,GAAA3B,OAAAD,EAAAC,EAAAI,EAAAC,EAAA,EAAAsB,GAAAmB,gBAAAnB,GAAAoB,gCAIAzC,EAAA,IAAAqB,GAAAqB,UACAzC,EAAA,IAAAoB,GAAAO,IACA1B,EAAA,GACAC,EAAA,GAGAkB,GAAAsB,aAAAjD,EAAAM,EAAAC,EAAAoB,GAAAuB,UAAAvB,GAAAwB,qBAIA/D,EAAA,GACA9U,KAAA2U,aAAA,GACA3U,KAAA4U,cAAA,GACA5U,KAAAoT,aAAA,EACApT,KAAA0T,cAAA,EACA1T,KAAAwT,iBAAA,EACAxT,KAAA2T,kBAAA,EAGAyC,EAAA,IAAAiB,GAAAY,OAAA,aACA5B,EAAA,IAAAgB,GAAAY,OAAA,aACA3B,EAAA,IAAAe,GAAAY,OAAA,aACA1B,EAAA,IAAAc,GAAAY,OAAA,aACAzB,EAAA,IAAAa,GAAAY,OAAA,iBACAxB,EAAAqC,KAAAC,IAAA/Y,KAAA2S,aAAA3S,KAAA2S,cACA+D,EAAAoC,KAAAC,IAAA/Y,KAAA+S,aAAA/S,KAAA+S,cACA4D,EAAAmC,KAAAC,IAAA/Y,KAAAgT,cAAAhT,KAAAgT,eAGA1W,EAAA,EAAAA,EAAA0Z,EAAA3U,SAAA/E,EACA4Z,EAAAxZ,KAAA2a,GAAA2B,YAAAhD,EAAAtX,IAAApC,KACA6Z,EAAAxZ,OAAAsc,OAAA/C,GACAU,EAAAkC,KAAAhH,IAAA3U,MAAA2b,KAAAnc,OAAAuc,EAAA,KAAAvc,CAAAwZ,IACAS,IAAAS,GAAA2B,YAAAhD,EAAAtX,IAAApC,MAGAua,EAAAb,EAAAtX,IAAApC,GACAwa,EAAAO,GAAA8B,aAAAtC,GACAQ,GAAA+B,aAAAxD,EAAAI,EAAA1Z,EAAA8Z,EAAA,IAAAH,EAAA,KACAc,EAAA,IAAAM,GAAAkB,MAAAzB,EAAAuC,EAAA,EAAAvC,EAAAwC,EAAA,GACAtC,EAAA,IAAAK,GAAAkB,MAAAzB,EAAAuC,EAAAvC,EAAAvP,MAAA,EAAAuP,EAAAwC,EAAAxC,EAAA/O,OAAA,IACA,IAAAkO,EAAAsD,OAAA,EAAAjd,GAAA,SAAA2Z,EAAAsD,OAAA,EAAAjd,GAAA,SAAA2Z,EAAAsD,OAAA,EAAAjd,GAAA,SAAA2Z,EAAAsD,OAAA,EAAAjd,GAAA,GACA+a,GAAAmC,UAAA5D,EAAAmB,EAAAC,EAAAX,EAAA,EAAAgB,GAAAoC,QAAA,GAEApC,GAAAmC,UAAA5D,EAAAmB,EAAAC,EAAAX,EAAA,EAAAgB,GAAAoC,QAAA,GAGA9D,EAAArU,EAAAoY,IAAA5C,GACAhC,EAAApY,KAAAiZ,GAEA0B,GAAA2B,YAAAhD,EAAAtX,IAAApC,KAAAma,GACAY,GAAA+B,aAAAvD,EAAAG,EAAA1Z,EAAAka,GAAA,EAAAa,GAAAsC,OAAA1D,EAAA,GACAoB,GAAA+B,aAAA7D,EAAAS,EAAA1Z,EAAAka,EAAA,EAAAa,GAAAsC,OAAA1D,EAAA,IACAoB,GAAA2B,YAAAhD,EAAAtX,IAAApC,IAAAma,GAAAY,GAAA2B,YAAAhD,EAAAtX,IAAApC,KAAAoa,GACAW,GAAA+B,aAAAvD,EAAAG,EAAA1Z,EAAAga,GAAA,EAAAe,GAAAsC,OAAA1D,EAAA,GACAoB,GAAA+B,aAAA7D,EAAAS,EAAA1Z,EAAAga,EAAA,EAAAe,GAAAsC,OAAA1D,EAAA,GACAjW,KAAA2U,aAAAjY,KAAA2a,GAAA2B,YAAAhD,EAAAtX,IAAApC,OACA0D,KAAAoT,cACAiE,GAAA2B,YAAAhD,EAAAtX,IAAApC,IAAAoa,GAAAW,GAAA2B,YAAAhD,EAAAtX,IAAApC,KAAAqa,GACAU,GAAA+B,aAAAvD,EAAAG,EAAA1Z,EAAAia,GAAA,EAAAc,GAAAsC,OAAA1D,EAAA,GACAoB,GAAA+B,aAAA7D,EAAAS,EAAA1Z,EAAAia,EAAA,EAAAc,GAAAsC,OAAA1D,EAAA,GACAjW,KAAA4U,cAAAlY,KAAA2a,GAAA2B,YAAAhD,EAAAtX,IAAApC,OACA0D,KAAA0T,eACA2D,GAAA2B,YAAAhD,EAAAtX,IAAApC,IAAAqa,IACAU,GAAA+B,aAAAvD,EAAAG,EAAA1Z,EAAAka,GAAA,EAAAa,GAAAsC,OAAA1D,EAAA,GACAoB,GAAA+B,aAAA7D,EAAAS,EAAA1Z,EAAAka,EAAA,EAAAa,GAAAsC,OAAA1D,EAAA,KAOA,IAAAgB,EAAA,EAAAA,EAAAjX,KAAA2U,aAAAnY,OAAAya,IAAAjX,KAAAwT,kBAAAxT,KAAA2U,aAAAsC,GAKA,GAJAjX,KAAAyT,YAAAzT,KAAAwT,iBAAAxT,KAAA2U,aAAAnY,QAAAod,QAAA,GACAC,MAAA7Z,KAAAyT,cAAAzT,KAAAyT,WAAA,GAGA,IAAAzT,KAAA0T,oBACA,IAAAwD,EAAA,EAAAA,EAAAlX,KAAA4U,cAAApY,OAAA0a,IACAlX,KAAA2T,mBAAA3T,KAAA4U,cAAAsC,GAKAlX,KAAAqT,mBAAArT,KAAA2T,kBAAA3T,KAAAyT,YAAAmG,QAAA,GACAC,MAAA7Z,KAAAqT,qBAAArT,KAAAqT,kBAAA,GACArT,KAAA4T,gBAAA5T,KAAA2T,kBAAA3T,KAAA0T,eAAAkG,QAAA,GACAC,MAAA7Z,KAAA4T,kBAAA5T,KAAA4T,eAAA,GACA5T,KAAA6T,mBAAA7T,KAAA4T,eAAA5T,KAAAyT,YAAAmG,QAAA,GACAC,MAAA7Z,KAAA6T,qBAAA7T,KAAA6T,kBAAA,GACA7T,KAAAsT,WAAAtT,KAAAoT,eAAApT,KAAAqT,kBACArT,KAAA8Z,YAAA9D,EAAA3U,OAGAgW,GAAAG,OAAA,MAAAlW,GACA+V,GAAAG,OAAA,OAAAlW,GACA+V,GAAAG,OAAA,OAAAlW,GACA+V,GAAAG,OAAA,OAAAlW,GACA+V,GAAAG,OAAA,OAAAlW,GACA+V,GAAAG,OAAA,OAAAlW,GACA+V,GAAAG,OAAA,YAAA/B,GACA4B,GAAAG,OAAA,UAAA5B,GACAyB,GAAAG,OAAA,WAAA3B,GACAwB,GAAAG,OAAA,UAAAjC,GAGA4B,EAAAE,GAAAC,OAAA,eACAD,GAAA0C,OAAA5C,EAAA,IAAAE,GAAAkB,MAAA,OAAAvY,KAAA2S,aAAA2D,EAAA,GACAe,GAAA0C,OAAA5C,EAAA,IAAAE,GAAAkB,MAAA,OAAAvY,KAAA+S,aAAAwD,EAAA,GACAc,GAAA0C,OAAA5C,EAAA,IAAAE,GAAAkB,MAAA,OAAAvY,KAAAgT,cAAAwD,EAAA,GACAa,GAAAG,OAAA,eAAAL,GACAA,EAAA6C,SAGA1Y,EAAA0Y,SACAxE,EAAAwE,SACAvE,EAAAuE,SACAtE,EAAAsE,SACApE,EAAAoE,SACAnE,EAAAmE,SACAzE,EAAAyE,SACAlE,EAAAkE,SACAhE,EAAAgE,SACA/D,EAAA+D,SA1LA,yBAAA5C,EAAAxH,SAAA0F,EAAAtV,SAAA,SAAAgS,IAAA,OAAAqD,EAAAlY,MAAA6C,KAAA6P,WAAA,OAAAmC,EAAA,GA4LAkD,WA5LA,eAAA+E,EAAAtd,OAAAqS,EAAA,KAAArS,CAAAsS,mBAAAC,KAAA,SAAAgL,IAAA,IAAA5d,EAAA,OAAA2S,mBAAAlE,KAAA,SAAAoP,GAAA,eAAAA,EAAA9K,KAAA8K,EAAAzL,MAAA,OA8LApS,EAAA,EA9LA,YA8LA0D,KAAAL,OAAArD,GA9LA,CAAA6d,EAAAzL,KAAA,eAAAyL,EAAAzL,KAAA,EA+LA,IAAAe,QAAA,SAAAC,EAAAC,GAAA,OAAAtH,WAAAqH,EAAA,OA/LA,SA8LA1P,KAAAL,OA9LAwa,EAAAzL,KAAA,sBAAAyL,EAAAzL,KAAA,EAmMA,IAAAe,QAAA,SAAAC,EAAAC,GAAA,OAAAtH,WAAAqH,EAAA,OAnMA,cAoMA1P,KAAA0U,kBAAA,EApMAyF,EAAAzL,KAAA,GAuMA,IAAAe,QAAA,SAAAC,EAAAC,GAAA,OAAAtH,WAAAqH,EAAA,OAvMA,QAwMA1P,KAAA+T,YAAA,EAxMA,yBAAAoG,EAAAvK,SAAAsK,EAAAla,SAAA,SAAAkV,IAAA,OAAA+E,EAAA9c,MAAA6C,KAAA6P,WAAA,OAAAqF,EAAA,MCxVkVkF,GAAA,ECQ9UC,cAAY1d,OAAAwK,EAAA,KAAAxK,CACdyd,GACAnK,EACAiE,GACF,EACA,KACA,KACA,OAIepP,GAAAuV,WCVfC,GAAA,CACApU,WAAA,CACAqU,SAAAvK,EACAwK,YAAA1V,IAEA9I,KALA,WAMA,OACAuE,aAAA,EACA8J,gBAAA2F,IAGAvJ,QAXA,WAWA,IAAAC,EAAA1G,KACA2G,GAAAC,IAAA,wBACAF,EAAA2D,gBAAA,kBCtBgVoQ,GAAA,GCO5UC,GAAY/d,OAAAwK,EAAA,KAAAxK,CACd8d,GACArQ,EACAG,GACF,EACA,KACA,KACA,MAIeoQ,GAAAD,WClBXE,GAAM,WAAgB,IAAA7a,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,YAAgCE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,cAAApB,EAAA,OAAAA,EAAA,KAAAJ,EAAAwB,GAAA,qJAAApB,EAAA,KAAAJ,EAAAwB,GAAA,kVAAApB,EAAA,KAAAJ,EAAAwB,GAAA,6ZAAApB,EAAA,YAAm+BE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,qBAAApB,EAAA,OAAAA,EAAA,MAAAJ,EAAAwB,GAAA,sBAAApB,EAAA,KAAAJ,EAAAwB,GAAA,yQAAApB,EAAA,MAAAJ,EAAAwB,GAAA,yBAAApB,EAAA,KAAAJ,EAAAwB,GAAA,sjBAAApB,EAAA,MAAAJ,EAAAwB,GAAA,0BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,kkBAAApB,EAAA,MAAAJ,EAAAwB,GAAA,4BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,8aAAApB,EAAA,MAAAJ,EAAAwB,GAAA,6BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,kjBAAApB,EAAA,YAAqrFE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,+BAAApB,EAAA,OAAAA,EAAA,MAAAJ,EAAAwB,GAAA,oBAAApB,EAAA,KAAAJ,EAAAwB,GAAA,iLAAApB,EAAA,MAAAJ,EAAAwB,GAAA,SAAAxB,EAAAwB,GAAA,oDAAApB,EAAA,MAAAJ,EAAAwB,GAAA,sBAAApB,EAAA,KAAAJ,EAAAwB,GAAA,gOAAApB,EAAA,MAAAJ,EAAAwB,GAAA,8BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,gVAAApB,EAAA,MAAAJ,EAAAwB,GAAA,gCAAApB,EAAA,KAAAJ,EAAAwB,GAAA,kbAAApB,EAAA,MAAAJ,EAAAwB,GAAA,mCAAApB,EAAA,KAAAJ,EAAAwB,GAAA,ylBAAApB,EAAA,MAAAJ,EAAAwB,GAAA,iCAAApB,EAAA,KAAAJ,EAAAwB,GAAA,2CAAApB,EAAA,MAAAJ,EAAAwB,GAAA,SAAAxB,EAAAwB,GAAA,qXAC3zIyZ,GAAe,GC0EnBC,GAAA,CACAjf,KADA,WAEA,WC7E+Ukf,GAAA,GCO3UC,GAAYxe,OAAAwK,EAAA,KAAAxK,CACdue,GACAN,GACAI,IACF,EACA,KACA,KACA,MAIeI,GAAAD,WClBXE,GAAM,WAAgB,IAAAtb,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,YAAgCE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,oBAAApB,EAAA,OAAAA,EAAA,KAAAJ,EAAAwB,GAAA,uLAAApB,EAAA,KAAAJ,EAAAwB,GAAA,6cAAApB,EAAA,KAAAJ,EAAAwB,GAAA,4bAAApB,EAAA,YAAqqCE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,sBAAApB,EAAA,OAAAA,EAAA,MAAAJ,EAAAwB,GAAA,0BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,oTAAsVpB,EAAA,MAAAJ,EAAAwB,GAAA,0BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,snBAAApB,EAAA,MAAAJ,EAAAwB,GAAA,2BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,ipBAAApB,EAAA,MAAAJ,EAAAwB,GAAA,4BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,0dAAApB,EAAA,MAAAJ,EAAAwB,GAAA,6BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,imBAAApB,EAAA,YAA2nFE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,uCAAApB,EAAA,OAAAA,EAAA,MAAAJ,EAAAwB,GAAA,0BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,wMAAApB,EAAA,MAAAJ,EAAAwB,GAAA,QAAAxB,EAAAwB,GAAA,uDAAApB,EAAA,MAAAJ,EAAAwB,GAAA,0BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,0OAAApB,EAAA,MAAAJ,EAAAwB,GAAA,4BAAApB,EAAA,KAAAJ,EAAAwB,GAAA,yWAA0hCpB,EAAA,MAAAJ,EAAAwB,GAAA,sCAAApB,EAAA,KAAAJ,EAAAwB,GAAA,6eAAApB,EAAA,MAAAJ,EAAAwB,GAAA,oCAAApB,EAAA,KAAAJ,EAAAwB,GAAA,kqBAAApB,EAAA,MAAAJ,EAAAwB,GAAA,0CAAApB,EAAA,KAAAJ,EAAAwB,GAAA,mdACnzL+Z,GAAe,GC0EnBC,GAAA,CACAvf,KADA,WAEA,WC7EkVwf,GAAA,GCO9UC,GAAY9e,OAAAwK,EAAA,KAAAxK,CACd6e,GACAH,GACAC,IACF,EACA,KACA,KACA,MAIeI,GAAAD,WClBXE,GAAM,WAAgB,IAAA5b,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,YAAgCE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,WAAApB,EAAA,OAAAA,EAAA,KAAAJ,EAAAwB,GAAA,qJAAApB,EAAA,KAAAJ,EAAAwB,GAAA,kBAAApB,EAAA,KAA2OE,MAAA,CAAOub,KAAA,+CAAqD,CAAA7b,EAAAwB,GAAA,kBAAAxB,EAAAwB,GAAA,kGAAApB,EAAA,KAAAJ,EAAAwB,GAAA,0GAAApB,EAAA,KAAqQE,MAAA,CAAOub,KAAA,0BAAgC,CAAA7b,EAAAwB,GAAA,gEAAAxB,EAAAwB,GAAA,kCAAApB,EAAA,KAA0HE,MAAA,CAAOub,KAAA,+DAAqE,CAAA7b,EAAAwB,GAAA,uBAAAxB,EAAAwB,GAAA,OAAApB,EAAA,KAAAJ,EAAAwB,GAAA,2JACxkCsa,GAAe,GC0BnBC,GAAA,CACA9f,KADA,WAEA,WC7B+U+f,GAAA,GCO3UC,GAAYrf,OAAAwK,EAAA,KAAAxK,CACdof,GACAJ,GACAE,IACF,EACA,KACA,KACA,MAIeI,GAAAD,WClBXE,GAAM,WAAgB,IAAAnc,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,YAAgCE,MAAA,CAAOwa,OAAA,KAAW,CAAA1a,EAAA,UAAeE,MAAA,CAAOoK,KAAA,GAAAqQ,IAAA,GAAAC,aAAA,KAAoC,CAAA5a,EAAA,UAAAA,EAAA,gBAAkCE,MAAA,CAAOuL,gBAAA,KAAoB,CAAAzL,EAAA,OAAAA,EAAA,MAAqBS,YAAA,iBAA4B,CAAAb,EAAAwB,GAAA,kBAAApB,EAAA,OAAAA,EAAA,KAAAJ,EAAAwB,GAAA,uLAAApB,EAAA,KAAAJ,EAAAwB,GAAA,gBAAApB,EAAA,KAAkRE,MAAA,CAAOub,KAAA,+CAAqD,CAAA7b,EAAAwB,GAAA,yBAAAxB,EAAAwB,GAAA,oFAAApB,EAAA,KAAAJ,EAAAwB,GAAA,kGAAApB,EAAA,KAAsPE,MAAA,CAAOub,KAAA,0BAAgC,CAAA7b,EAAAwB,GAAA,8EAAAxB,EAAAwB,GAAA,6BAAApB,EAAA,KAAmIE,MAAA,CAAOub,KAAA,+DAAqE,CAAA7b,EAAAwB,GAAA,0BAAAxB,EAAAwB,GAAA,OAAApB,EAAA,KAAAJ,EAAAwB,GAAA,gLACzmC4a,GAAe,GCyBnBC,GAAA,CACApgB,KADA,WAEA,WC5BkVqgB,GAAA,GCO9UC,GAAY3f,OAAAwK,EAAA,KAAAxK,CACd0f,GACAH,GACAC,IACF,EACA,KACA,KACA,MAIeI,GAAAD,WCVf/Z,aAAIC,IAAIga,QAIO,IAAAC,GAAA,IAAID,OAAO,CACxBxd,KAAM,UACN0d,KAAM5S,cACN6S,OAAQ,CACN,CACEC,KAAM,IACNve,KAAM,SACN6I,UAAW2V,IAEb,CACED,KAAM,SACNve,KAAM,QACN6I,UAAW4V,IAEb,CACEF,KAAM,YACNve,KAAM,WACN6I,UAAW6V,IAEb,CACEH,KAAM,SACNve,KAAM,QACN6I,UAAW8V,IAEb,CACEJ,KAAM,YACNve,KAAM,WACN6I,UAAW+V,+CC5BjB1a,aAAIC,IAAI0a,KACR3a,aAAIC,IAAI2a,IAAS,CACfC,MAAO,CACLC,QAASC,IAAOhH,KAAKiH,QACrBC,UAAWF,IAAOG,UAAUF,QAC5BG,OAAQJ,IAAO/G,IAAIoH,SAErBC,QAAS,CACPC,kBAAkB,KAItBtb,aAAIub,OAAOC,eAAgB,EAIpB,IAAMpX,GAAW,IAAIpE,aAE5B,IAAIA,aAAI,CACNuD,OACA2W,UACAuB,OAAQ,SAAAC,GAAC,OAAIA,EAAEtU,MACduU,OAAO,2CCjCV,IAAAC,EAAAxgB,EAAA,QAAAygB,EAAAzgB,EAAA2B,EAAA6e,GAAudC,EAAG,qCCA1d,IAAAC,EAAA1gB,EAAA,QAAA2gB,EAAA3gB,EAAA2B,EAAA+e,GAAodC,EAAG","file":"js/app.17c39733.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/mecvision/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',[_c('app-toolbar'),_c('v-content',[_c('router-view',{key:_vm.componentKey}),_c('loading-dialogue')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-toolbar',{attrs:{\"color\":\"primary\",\"absolute\":\"\",\"app\":\"\"}},[_c('v-toolbar-title',{staticClass:\"text-uppercase white--text\",staticStyle:{\"cursor\":\"pointer\"}},[_c('v-layout',{attrs:{\"align-center\":\"\"},on:{\"click\":function($event){return _vm.rerender()}}},[_c('v-avatar',{staticClass:\"mx-2\",attrs:{\"tile\":\"\",\"size\":\"20\"}},[_c('img',{attrs:{\"src\":\"/mecvision/img/bot.png\"}})]),_c('span',{staticClass:\"font-weight-black\"},[_vm._v(\"MEC\")]),_c('span',{staticClass:\"font-weight-thin\"},[_vm._v(\"Vision\")])],1)],1),_c('v-spacer'),_c('span',{staticClass:\"caption mx-3\"},[_c('v-btn-toggle',{attrs:{\"value\":_vm.localeSelect,\"mandatory\":\"\"}},[_c('v-btn',{attrs:{\"small\":\"\",\"flat\":\"\"},on:{\"click\":function($event){return _vm.changeLocale('en')}}},[_vm._v(\"EN\")]),_c('v-btn',{attrs:{\"small\":\"\",\"flat\":\"\"},on:{\"click\":function($event){return _vm.changeLocale('es')}}},[_vm._v(\"ES\")])],1)],1),_c('v-toolbar-items',{staticClass:\"hidden-sm-and-down\"},_vm._l((_vm.menu[_vm.localeSelect]),function(item){return _c('v-btn',{key:item.title,attrs:{\"to\":item.link,\"flat\":\"\",\"dark\":\"\"}},[_vm._v(_vm._s(item.title))])}),1),_c('v-menu',{staticClass:\"hidden-md-and-up\"},[_c('v-toolbar-side-icon',{attrs:{\"slot\":\"activator\"},slot:\"activator\"}),_c('v-list',_vm._l((_vm.menu[_vm.localeSelect]),function(item){return _c('v-list-tile',{key:item.title,attrs:{\"to\":item.link}},[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(_vm._s(item.title))])],1)],1)}),1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue'\r\nimport VueI18n from 'vue-i18n'\r\n\r\nVue.use(VueI18n)\r\n\r\nconst messages = {\r\n  'en': {\r\n    'subtitle': 'Using computer vision to identify and count mosquito eggs.',\r\n    'description': \"This is a proof-of-concept web app to develop a way to algorithmically detect mosquito eggs and egg cluster on ovitrap paper using computer vision. Try out the app using the 'demo' image -- or check out the guide for more information.\",\r\n    'Select Image': 'Select Image',\r\n    'Demo Image': 'Demo Image',\r\n    'Select the ovitrap image type': 'Select the ovitrap image type',\r\n    'Paper Strip': 'Paper Strip',\r\n    'Paper-Description': 'Ovitrap paper is rectangular in shape (approx. 32cm X 8cm), on white pellon fabric with gray-black mosquito eggs.',\r\n    'Magnified': 'Magnified',\r\n    'Magnified-Description': 'Ovitrap paper is less narrow than a paper strip, on white pellon fabric with gray-black mosquito eggs that appear larger in the image.',\r\n    'Microscope': 'Microscope',\r\n    'Microscope-Description': 'Image is square, and mosquito eggs are clearly visible as large objects.',\r\n    'Rotate': 'Rotate',\r\n    'Remove': 'Remove',\r\n    'Analyze': 'Analyze',\r\n    'Analyzing Image...': 'Analyzing Image...',\r\n    'Filters': 'Filters',\r\n    'Image Threshold Adjustment': 'Image Threshold Adjustment',\r\n    'Image Threshold Adjustment Details': 'Use this slider to separate background image \"noise\" and scan for just the eggs.',\r\n    'Minimum Egg Size': 'Minimum Egg Size',\r\n    'Minimum Egg Size Details': \"The minimum (smallest single egg) radius for the algorithm — anything smaller will be 'grayed out' and not calculated.\",\r\n    'Maximum Egg Size': 'Maximum Egg Size',\r\n    'Maximum Egg Size Details': 'The maximum radius for the eggs — anything larger will be considered a cluster.',\r\n    'Maximum Cluster Size': 'Maximum Cluster Size',\r\n    'Maximum Cluster Size Details': 'The maximum radius for the cluster of eggs — anything larger will be discarded.',\r\n    'Egg Size Scale': 'Egg Size Scale',\r\n    'Egg Size Scale Details': 'Use these sliders to set the minimum (smallest single egg) radius for the algorithm.',\r\n    'Too Large / Too Small': 'Too Large / Too Small',\r\n    'Reset': 'Reset',\r\n    'of': 'of',\r\n    'Source Image': 'Source Image',\r\n    'Threshold': 'Threshold',\r\n    'Detected Objects': 'Detected Objects',\r\n    'Sorted Markers': 'Sorted Markers',\r\n    'Outlined Overlay': 'Outlined Overlay',\r\n    'Analysis': 'Analysis',\r\n    'Details': 'Details',\r\n    'Single Eggs': 'Single Eggs',\r\n    'Calculated from Clusters': 'Calculated from Clusters',\r\n    'Total Egg Estimation': 'Total Egg Estimation',\r\n    'Total Single Egg Area': 'Total Single Egg Area',\r\n    'Single Egg Average Size': 'Single Egg Average Size',\r\n    'Egg Clusters': 'Egg Clusters',\r\n    'Total Egg Clusters Area': 'Total Egg Clusters Area',\r\n    'Average Cluster Area': 'Average Cluster Area',\r\n    'Average Eggs per Cluster': 'Average Eggs per Cluster',\r\n    'Image Size': 'Image Size',\r\n    'Close': 'Close',\r\n    'Compare': 'Compare',\r\n    'Show Filters': 'Show Filters'\r\n  },\r\n  'es': {\r\n    'subtitle': 'Uso de la visión por ordenador para identificar y contar los huevos de mosquitos.',\r\n    'description': \"Esta es una aplicación web de prueba de concepto para desarrollar una forma de detectar de forma algorítmica los huevos de mosquitos y los conglomerados de huevos en papel ovitrap mediante visión artificial. Pruebe la aplicación utilizando la imagen 'demo' o consulte la guía para obtener más información.\",\r\n    'Select Image': 'Seleccionar Imagen',\r\n    'Demo Image': 'Imagen Demo',\r\n    'Select the ovitrap image type': 'Seleccione el tipo de imagen ovitrap',\r\n    'Paper Strip': 'Tira de Papel',\r\n    'Paper-Description': 'El papel Ovitrap es de forma rectangular (aprox. 32 cm X 8 cm), sobre tela de pellón blanco con huevos de mosquito negro grisáceo.',\r\n    'Magnified': 'Magnificada',\r\n    'Magnified-Description': 'El papel Ovitrap es menos estrecho que una tira de papel, sobre tela de pellon blanco con huevos de mosquito gris-negro que aparecen más grandes en la imagen.',\r\n    'Microscope': 'Microscopio',\r\n    'Microscope-Description': 'La imagen es cuadrada y los huevos de mosquito son claramente visibles como objetos grandes.',\r\n    'Rotate': 'Girar',\r\n    'Remove': 'Retirar',\r\n    'Analyze': 'Analizar',\r\n    'Analyzing Image...': 'Analizando Imagen...',\r\n    'Filters': 'Filtros',\r\n    'Image Threshold Adjustment': 'Ajuste del umbral de imagen',\r\n    'Image Threshold Adjustment Details': 'Use este control deslizante para separar el \"ruido\" de la imagen de fondo y escanee solo los huevos.',\r\n    'Minimum Egg Size': 'Tamaño Mínimo del Huevo',\r\n    'Minimum Egg Size Details': \"El radio mínimo (el huevo individual más pequeño) para el algoritmo; cualquier cosa más pequeña se 'atenuará' y no se calculará.\",\r\n    'Maximum Egg Size': 'Tamaño Máximo del Huevo',\r\n    'Maximum Egg Size Details': 'El radio máximo para los huevos: cualquier cosa más grande se considerará un racimo.',\r\n    'Maximum Cluster Size': 'Tamaño máximo del Clúster',\r\n    'Maximum Cluster Size Details': 'El radio máximo para el racimo de huevos: todo lo más grande se descartará.',\r\n    'Egg Size Scale': 'Escala de Tamaño de Huevo',\r\n    'Egg Size Scale Details': 'Use estos controles deslizantes para establecer el radio mínimo (el huevo más pequeño) para el algoritmo.',\r\n    'Too Large / Too Small': 'Demasiado Grande / Demasiado Pequeño',\r\n    'Reset': 'Reiniciar',\r\n    'of': 'de',\r\n    'Source Image': 'Fuente de Imagen',\r\n    'Threshold': 'Límite',\r\n    'Detected Objects': 'Objetos Detectados',\r\n    'Sorted Markers': 'Marcadores Ordenados',\r\n    'Outlined Overlay': 'Superposición Delineada',\r\n    'Analysis': 'Análisis',\r\n    'Details': 'Detalles',\r\n    'Single Eggs': 'Huevos individuales',\r\n    'Calculated from Clusters': 'Calculado a partir de clusters',\r\n    'Total Egg Estimation': 'Estimación Total del Huevo',\r\n    'Total Single Egg Area': 'Área Total de un Solo Euevo',\r\n    'Single Egg Average Size': 'Tamaño Promedio de un Solo Huevo',\r\n    'Egg Clusters': 'Racimos de Huevo',\r\n    'Total Egg Clusters Area': 'Área Total de Racimos de Huevos',\r\n    'Average Cluster Area': 'Área Promedio del Clúster',\r\n    'Average Eggs per Cluster': 'Promedio de Huevos por Racimo',\r\n    'Image Size': 'Tamaño de la Imagen',\r\n    'Close': 'Cerca',\r\n    'Compare': 'Comparar',\r\n    'Show Filters': 'Mostrar Filtros'\r\n  }\r\n}\r\n\r\nconst i18n = new VueI18n({\r\n  locale: 'en', // set locale\r\n  fallbackLocale: 'es', // set fallback locale\r\n  messages // set locale messages\r\n})\r\n\r\nexport default i18n\r\n","<template>\r\n<div>\r\n<!-- class=\"white--text\" @click=\"rerender()\" -->\r\n<v-toolbar color=\"primary\" absolute app>\r\n\r\n  <v-toolbar-title class=\"text-uppercase white--text\" style=\"cursor: pointer\">\r\n    <v-layout align-center  @click=\"rerender()\">\r\n    <v-avatar tile size=\"20\" class=\"mx-2\"><img src=\"/mecvision/img/bot.png\" /></v-avatar>\r\n    <span class=\"font-weight-black\">MEC</span><span class=\"font-weight-thin\">Vision</span>\r\n    </v-layout>\r\n  </v-toolbar-title>\r\n  <v-spacer></v-spacer>\r\n  <span class=\"caption mx-3\">\r\n    <v-btn-toggle :value=\"localeSelect\" mandatory>\r\n    <v-btn small flat @click=\"changeLocale('en')\">EN</v-btn>\r\n    <v-btn small flat @click=\"changeLocale('es')\">ES</v-btn>\r\n    </v-btn-toggle>\r\n  </span>\r\n\r\n  <v-toolbar-items class=\"hidden-sm-and-down\">\r\n    <v-btn\r\n    v-for=\"(item) in menu[localeSelect]\"\r\n    :key=\"item.title\"\r\n    :to=\"item.link\"\r\n    flat dark\r\n  >{{ item.title }}</v-btn>\r\n    </v-toolbar-items>\r\n\r\n    <v-menu class=\"hidden-md-and-up\">\r\n      <v-toolbar-side-icon slot=\"activator\"></v-toolbar-side-icon>\r\n      <v-list>\r\n        <v-list-tile v-for=\"item in menu[localeSelect]\" :key=\"item.title\" :to=\"item.link\">\r\n          <v-list-tile-content>\r\n            <v-list-tile-title>{{ item.title }}</v-list-tile-title>\r\n          </v-list-tile-content>\r\n        </v-list-tile>\r\n      </v-list>\r\n    </v-menu>\r\n\r\n</v-toolbar>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\nimport i18n from '@/plugins/i18n'\r\n\r\nexport default {\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      menu: {\r\n        0: [\r\n          { title: 'Vision', link: '/' },\r\n          { title: 'Guide', link: '/guide' },\r\n          { title: 'About', link: '/about' }\r\n        ],\r\n        1: [\r\n          { title: 'Visión', link: '/' },\r\n          { title: 'Guía', link: '/guide-es' },\r\n          { title: 'Acerca de...', link: '/about-es' }\r\n        ]\r\n      },\r\n      languages: [\r\n        { title: 'en', name: 'English' },\r\n        { title: 'es', name: 'Español' }\r\n      ],\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    localeSelect () {\r\n      if (this.$i18n.locale === 'en') {\r\n        return 0\r\n      } else {\r\n        return 1\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    eventBus.$on('appLoading', () => {\r\n      this.loading = true\r\n    })\r\n  },\r\n  methods: {\r\n    rerender () {\r\n      eventBus.$emit('forceRerender')\r\n    },\r\n    menuItems () {\r\n      return this.menu\r\n    },\r\n    changeLocale (locale) {\r\n      i18n.locale = locale\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Toolbar.vue?vue&type=template&id=3a430212&\"\nimport script from \"./Toolbar.vue?vue&type=script&lang=js&\"\nexport * from \"./Toolbar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"loading text-xs-center\"},[_c('v-dialog',{attrs:{\"persistent\":\"\",\"width\":\"500\"},model:{value:(_vm.loadingDialog),callback:function ($$v) {_vm.loadingDialog=$$v},expression:\"loadingDialog\"}},[_c('v-card',{attrs:{\"color\":\"primary\",\"dark\":\"\"}},[_c('v-card-text',[_c('v-layout',{attrs:{\"align-center\":\"\"}},[_c('v-avatar',{staticClass:\"mr-2\",attrs:{\"id\":\"bot\",\"tile\":\"\",\"size\":\"24\"}},[_c('v-img',{attrs:{\"src\":\"/mecvision/img/bot.gif\"}})],1),_vm._v(\"\\r\\n        \"+_vm._s(_vm.$t('Analyzing Image...'))+\"\\r\\n        \")],1),_c('v-progress-linear',{staticClass:\"mb-0\",attrs:{\"indeterminate\":\"\",\"color\":\"white\",\"height\":\"15\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div class=\"loading text-xs-center\">\r\n  <v-dialog\r\n    v-model=\"loadingDialog\"\r\n    persistent\r\n    width=\"500\"\r\n  >\r\n    <v-card\r\n      color=\"primary\"\r\n      dark\r\n    >\r\n      <v-card-text>\r\n        <v-layout align-center>\r\n        <v-avatar id=\"bot\" tile size=\"24\" class=\"mr-2\">\r\n              <v-img src=\"/mecvision/img/bot.gif\"></v-img></v-avatar>\r\n        {{ $t('Analyzing Image...') }}\r\n        </v-layout>\r\n        <v-progress-linear\r\n          indeterminate\r\n          color=\"white\"\r\n          class=\"mb-0\"\r\n          height=\"15\"\r\n        ></v-progress-linear>\r\n      </v-card-text>\r\n    </v-card>\r\n  </v-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      loadingDialog: false\r\n    }\r\n  },\r\n  created () {\r\n    eventBus.$on('loadingDialog', () => {\r\n      this.loadingDialog = true\r\n    })\r\n  },\r\n  watch: {\r\n    loadingDialog (val) {\r\n      if (!val) return\r\n      setTimeout(() => (this.loadingDialog = false), 3000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Loading.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Loading.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Loading.vue?vue&type=template&id=63fd434e&\"\nimport script from \"./Loading.vue?vue&type=script&lang=js&\"\nexport * from \"./Loading.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n\r\n<!-- Using Vuetify, the main structure of the app is 'v-container » v-layout » v-flex', separated between the various component files (Image, Analysis, etc.).\r\nThe remaining component files are separated for organizational purposes (About, Guide), and design purposes (Loading, Toolbar, Top). -->\r\n\r\n<div id=\"app\">\r\n<v-app>\r\n\r\n<!-- The toolbar is the constant header.  -->\r\n<app-toolbar></app-toolbar>\r\n\r\n<!-- This operates mainly as a single-page app (SPA), where the client-side view is controlled by the 'router-view' component.\r\nThe ':key' here is used to reset the app either through the reset button, or through clicking on the MECVision logo.\r\nThe loading dialogue only fires after the analysis button is clicked -- but it stays here as it is an app-wide view. -->\r\n<v-content>\r\n  <router-view :key=\"componentKey\"></router-view>\r\n  <loading-dialogue></loading-dialogue>\r\n</v-content>\r\n\r\n</v-app>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// Import eventBus (not complex enough for Vuex yet), Toolbar, and Loading screen\r\nimport { eventBus } from './main.js'\r\nimport AppToolbar from './components/Toolbar.vue'\r\nimport LoadingDialogue from './components/Loading.vue'\r\n\r\nexport default {\r\n  name: 'MECVision',\r\n  components: {\r\n    AppToolbar,\r\n    LoadingDialogue\r\n  },\r\n  data () {\r\n    return {\r\n      componentKey: 0 // This number is what gets reset by a forced re-render\r\n    }\r\n  },\r\n  created () { // A forced re-render pushes user back to default URL (\"/\"), increments componentKey which resets all the Vue components, and resets the scroll position.\r\n    eventBus.$on('forceRerender', () => {\r\n      this.$router.push('/')\r\n      this.componentKey += 1\r\n      this.$vuetify.goTo(0, {\r\n        offset: 0\r\n      })\r\n    })\r\n  },\r\n  mounted () {\r\n    // Mount openCV module after component is loaded, as the JS library isn't part of Webpack (explicitly because it tries to transcode everything which doesn't work), and just log that it worked.\r\n    let opencv = document.createElement('script')\r\n    opencv.setAttribute('src', 'opencv.js')\r\n    document.head.appendChild(opencv)\r\n    console.log('OpenCV Loaded')\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=5434f31c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.visionComponent,{key:_vm.componentKey,tag:\"component\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('app-top'),_c('v-layout',[_c('v-flex',{attrs:{\"xs12\":\"\",\"md6\":\"\",\"offset-md3\":\"\"}},[_c('v-container',{staticClass:\"pt-0\",attrs:{\"grid-list-xl\":\"\"}},[_c('h2',{staticClass:\"subheading text-xs-center pb-2\"},[_vm._v(_vm._s(_vm.$t('Select the ovitrap image type')))]),_c('v-item-group',{attrs:{\"mandatory\":\"\"},model:{value:(_vm.imageType),callback:function ($$v) {_vm.imageType=$$v},expression:\"imageType\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"justify-center\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"md4\":\"\"}},[_c('v-item',{scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar active = ref.active;\nvar toggle = ref.toggle;\nreturn _c('v-card',{class:active ? 'elevation-5' : '',style:(active ? 'border: 2px solid var(--v-primary-base)' : ''),on:{\"click\":function($event){toggle(), _vm.resetCroppa()}}},[_c('v-img',{attrs:{\"src\":\"/mecvision/img/type-paper-thumb.jpg\",\"aspect-ratio\":\"2.00\"}}),_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-0\"},[_vm._v(_vm._s(_vm.$t('Paper Strip')))]),_c('div',[_vm._v(_vm._s(_vm.$t('Paper-Description')))])])])],1)}}])})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"md4\":\"\"}},[_c('v-item',{scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar active = ref.active;\nvar toggle = ref.toggle;\nreturn _c('v-card',{class:active ? 'elevation-5' : '',style:(active ? 'border: 2px solid var(--v-primary-base)' : ''),on:{\"click\":function($event){toggle(), _vm.resetCroppa()}}},[_c('v-img',{attrs:{\"src\":\"/mecvision/img/type-magnified-thumb.jpg\",\"aspect-ratio\":\"2.00\"}}),_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-0\"},[_vm._v(_vm._s(_vm.$t('Magnified')))]),_c('div',[_vm._v(_vm._s(_vm.$t('Magnified-Description')))])])])],1)}}])})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"md4\":\"\"}},[_c('v-item',{scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar active = ref.active;\nvar toggle = ref.toggle;\nreturn _c('v-card',{class:active ? 'elevation-5' : '',style:(active ? 'border: 2px solid var(--v-primary-base)' : ''),on:{\"click\":function($event){toggle(), _vm.resetCroppa()}}},[_c('v-img',{attrs:{\"src\":\"/mecvision/img/type-microscope-thumb.jpg\",\"aspect-ratio\":\"2.00\"}}),_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-0\"},[_vm._v(_vm._s(_vm.$t('Microscope')))]),_c('div',[_vm._v(_vm._s(_vm.$t('Microscope-Description')))])])])],1)}}])})],1)],1)],1)],1)],1)],1),_c('v-layout',{key:_vm.croppaKey,style:(this.croppaDimensions),attrs:{\"id\":\"croppaBox\"}},[_c('croppa',{attrs:{\"auto-sizing\":\"\",\"zoom-speed\":5,\"placeholder\":\"\",\"show-loading\":true,\"placeholder-font-size\":20,\"loading-size\":100,\"show-remove-button\":false,\"prevent-white-space\":false,\"initial-image\":_vm.initialImage},on:{\"initial-image-loaded\":function($event){_vm.showBottomOptions = true},\"new-image\":function($event){_vm.showBottomOptions = true},\"image-remove\":function($event){_vm.showBottomOptions = false}},model:{value:(_vm.croppa),callback:function ($$v) {_vm.croppa=$$v},expression:\"croppa\"}},[_c('v-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.croppa.imageSet),expression:\"!croppa.imageSet\"}],attrs:{\"id\":\"croppaButton\",\"flat\":\"\",\"large\":\"\",\"depressed\":\"\",\"absolute\":\"\"},on:{\"click\":function($event){return _vm.croppa.chooseFile()}}},[_vm._v(\"\\r\\n    \"+_vm._s(_vm.$t('Select Image'))+\"\\r\\n    \"),_c('v-icon',{attrs:{\"large\":\"\",\"right\":\"\"}},[_vm._v(\"photo\")])],1),_c('v-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.croppa.imageSet),expression:\"!croppa.imageSet\"}],staticStyle:{\"top\":\"25px\"},attrs:{\"absolute\":\"\",\"right\":\"\"},on:{\"click\":function($event){return _vm.loadDemoImage()}}},[_vm._v(\"\\r\\n    \"+_vm._s(_vm.$t('Demo Image'))+\"\\r\\n    \"),_c('v-icon',{attrs:{\"right\":\"\"}},[_vm._v(\"grain\")])],1)],1)],1),_c('v-bottom-nav',{attrs:{\"app\":\"\",\"fixed\":\"\",\"value\":this.showBottomOptions,\"height\":\"70\"}},[_c('v-btn',{attrs:{\"flat\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){return _vm.croppa.rotate()}}},[_c('span',[_vm._v(_vm._s(_vm.$t('Rotate')))]),_c('v-icon',[_vm._v(\"rotate_right\")])],1),_c('v-btn',{attrs:{\"flat\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){return _vm.croppa.remove()}}},[_c('span',[_vm._v(_vm._s(_vm.$t('Remove')))]),_c('v-icon',[_vm._v(\"cancel\")])],1),_c('v-btn',{attrs:{\"flat\":\"\",\"color\":\"secondary\"},on:{\"click\":function($event){return _vm.accept()}}},[_c('span',[_vm._v(_vm._s(_vm.$t('Analyze')))]),_c('v-icon',[_vm._v(\"check_circle\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title my-4\"},[_c('v-layout',{staticStyle:{\"cursor\":\"pointer\"},attrs:{\"justify-center\":\"\",\"row\":\"\"},on:{\"click\":function($event){return _vm.rerender()}}},[_c('v-avatar',{staticClass:\"mr-2 ml-0\",attrs:{\"tile\":\"\",\"size\":\"48\"}},[_c('img',{attrs:{\"src\":\"/mecvision/img/bot.png\"}})]),_c('span',{staticClass:\"display-2 font-weight-black text-uppercase black--text pb-0\"},[_c('span',[_vm._v(\"MEC\")]),_c('span',{staticClass:\"font-weight-thin\"},[_vm._v(\"Vision\")])])],1),_c('v-layout',{attrs:{\"align-center\":\"\",\"justify-center\":\"\",\"wrap\":\"\"}},[_c('h2',{staticClass:\"headline mt-4\"},[_vm._v(_vm._s(_vm.$t('subtitle')))])]),_c('v-layout',{attrs:{\"align-center\":\"\",\"justify-center\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"md10\":\"\",\"lg10\":\"\",\"xl6\":\"\"}},[_c('p',{staticClass:\"subheading my-3\"},[_vm._v(_vm._s(_vm.$t('description')))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n<div class=\"title my-4\">\r\n\r\n  <v-layout justify-center row @click=\"rerender()\" style=\"cursor: pointer\">\r\n    <v-avatar tile size=\"48\" class=\"mr-2 ml-0\"><img src=\"/mecvision/img/bot.png\" /></v-avatar>\r\n    <span class=\"display-2 font-weight-black text-uppercase black--text pb-0\"><span>MEC</span><span class=\"font-weight-thin\">Vision</span></span>\r\n  </v-layout>\r\n\r\n  <v-layout align-center justify-center wrap>\r\n    <h2 class=\"headline mt-4\">{{ $t('subtitle') }}</h2>\r\n  </v-layout>\r\n\r\n  <v-layout align-center justify-center wrap>\r\n    <v-flex xs12 md10 lg10 xl6>\r\n      <p class=\"subheading my-3\">{{ $t('description') }}</p>\r\n    </v-flex>\r\n  </v-layout>\r\n\r\n</div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\n\r\nexport default {\r\n  methods: {\r\n    rerender () {\r\n      eventBus.$emit('forceRerender')\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Top.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Top.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Top.vue?vue&type=template&id=4e5383d9&\"\nimport script from \"./Top.vue?vue&type=script&lang=js&\"\nexport * from \"./Top.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n\r\n<v-container>\r\n\r\n<!-- Main navigation bar here -- mostly just for aesthetic reasons -->\r\n<app-top></app-top>\r\n\r\n<!-- Selection of image style -- which affects crop window as well as emit of egg size data for analysis -->\r\n<v-layout>\r\n  <v-flex xs12 md6 offset-md3>\r\n    <v-container grid-list-xl class=\"pt-0\">\r\n      <h2 class=\"subheading text-xs-center pb-2\">{{ $t('Select the ovitrap image type') }}</h2>\r\n\r\n      <v-item-group v-model=\"imageType\" mandatory>\r\n      <v-layout row wrap justify-center>\r\n\r\n        <v-flex xs12 md4>\r\n          <v-item>\r\n            <v-card slot-scope=\"{ active, toggle }\" :style=\"active ? 'border: 2px solid var(--v-primary-base)' : ''\" :class=\"active ? 'elevation-5' : ''\" @click=\"toggle(), resetCroppa()\">\r\n              <v-img src=\"/mecvision/img/type-paper-thumb.jpg\" aspect-ratio=\"2.00\"></v-img>\r\n              <v-card-title primary-title>\r\n                <div>\r\n                  <h3 class=\"headline mb-0\">{{ $t('Paper Strip') }}</h3>\r\n                  <div>{{ $t('Paper-Description') }}</div>\r\n                </div>\r\n              </v-card-title>\r\n            </v-card>\r\n          </v-item>\r\n        </v-flex>\r\n\r\n        <v-flex xs12 md4>\r\n          <v-item>\r\n            <v-card slot-scope=\"{ active, toggle }\" :style=\"active ? 'border: 2px solid var(--v-primary-base)' : ''\" :class=\"active ? 'elevation-5' : ''\" @click=\"toggle(), resetCroppa()\">\r\n              <v-img src=\"/mecvision/img/type-magnified-thumb.jpg\" aspect-ratio=\"2.00\"></v-img>\r\n              <v-card-title primary-title>\r\n                <div>\r\n                  <h3 class=\"headline mb-0\">{{ $t('Magnified') }}</h3>\r\n                  <div>{{ $t('Magnified-Description') }}</div>\r\n                </div>\r\n              </v-card-title>\r\n            </v-card>\r\n          </v-item>\r\n        </v-flex>\r\n\r\n        <v-flex xs12 md4>\r\n          <v-item>\r\n            <v-card slot-scope=\"{ active, toggle }\" :style=\"active ? 'border: 2px solid var(--v-primary-base)' : ''\" :class=\"active ? 'elevation-5' : ''\" @click=\"toggle(), resetCroppa()\">\r\n              <v-img src=\"/mecvision/img/type-microscope-thumb.jpg\" aspect-ratio=\"2.00\"></v-img>\r\n              <v-card-title primary-title>\r\n                <div>\r\n                  <h3 class=\"headline mb-0\">{{ $t('Microscope') }}</h3>\r\n                  <div>{{ $t('Microscope-Description') }}</div>\r\n                </div>\r\n              </v-card-title>\r\n            </v-card>\r\n          </v-item>\r\n        </v-flex>\r\n      </v-layout>\r\n      </v-item-group>\r\n\r\n    </v-container>\r\n\r\n  </v-flex>\r\n</v-layout>\r\n\r\n<!-- Using Vue Croppa for image handling and manipulation.\r\nThe one thing to note is the image selection changes the styling of the crop box.\r\nThe image itself is then passed on via the 'accept' method below. -->\r\n<v-layout id=\"croppaBox\" :key=\"croppaKey\" :style=\"this.croppaDimensions\">\r\n  <croppa\r\n    v-model=\"croppa\"\r\n    auto-sizing\r\n    :zoom-speed=\"5\"\r\n    placeholder=\"\"\r\n    :show-loading=\"true\"\r\n    :placeholder-font-size=\"20\"\r\n    :loading-size=\"100\"\r\n    :show-remove-button=\"false\"\r\n    :prevent-white-space=\"false\"\r\n    :initial-image=\"initialImage\"\r\n    @initial-image-loaded=\"showBottomOptions = true\"\r\n    @new-image=\"showBottomOptions = true\"\r\n    @image-remove=\"showBottomOptions = false\"\r\n    >\r\n\r\n  <!-- 'Select image' button serves the same function as drag/drop image into boundary area, exept allows for file chooser explicitely. -->\r\n  <!-- Icons are loaded with Google Material icons. -->\r\n  <v-btn\r\n    id=\"croppaButton\" v-show=\"!croppa.imageSet\" @click=\"croppa.chooseFile()\" flat large depressed absolute>\r\n    {{ $t('Select Image') }}\r\n    <v-icon large right>photo</v-icon>\r\n  </v-btn>\r\n\r\n  <!-- Allowed to load a demo image as a way to test and demonstrate app functionality. -->\r\n  <v-btn v-show=\"!croppa.imageSet\" @click=\"loadDemoImage()\" absolute  right style=\"top: 25px\">\r\n    {{ $t('Demo Image') }}\r\n    <v-icon right>grain</v-icon>\r\n  </v-btn>\r\n\r\n  </croppa>\r\n</v-layout>\r\n\r\n<v-bottom-nav app fixed :value=\"this.showBottomOptions\" height='70'>\r\n\r\n  <v-btn flat color=\"primary\" @click=\"croppa.rotate()\">\r\n    <span>{{ $t('Rotate') }}</span>\r\n    <v-icon>rotate_right</v-icon>\r\n  </v-btn>\r\n\r\n  <v-btn flat color=\"primary\" @click=\"croppa.remove()\">\r\n    <span>{{ $t('Remove') }}</span>\r\n    <v-icon>cancel</v-icon>\r\n  </v-btn>\r\n\r\n  <v-btn flat color=\"secondary\" @click=\"accept()\">\r\n    <span>{{ $t('Analyze') }}</span>\r\n    <v-icon>check_circle</v-icon>\r\n  </v-btn>\r\n\r\n</v-bottom-nav>\r\n\r\n</v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\nimport AppTop from './Top.vue'\r\n\r\nexport default {\r\n  components: {\r\n    AppTop\r\n  },\r\n  data () {\r\n    return {\r\n      croppa: {},\r\n      croppaKey: 0,\r\n      initialImage: '',\r\n      dataUrl: '',\r\n      imageAccepted: false,\r\n      loading: false,\r\n      loadingDialog: false,\r\n      analysisStarted: false,\r\n      showBottomOptions: false,\r\n      imageType: 0\r\n    }\r\n  },\r\n  computed: {\r\n    croppaDimensions () {\r\n      if (this.imageType === 0) return 'width: 100%; height: 400px;'\r\n      if (this.imageType === 1) return 'width: 100%; height: 800px;'\r\n      if (this.imageType === 2) return 'width: 80%; height: 600px;'\r\n      return 'width = 100%; height: 400px;'\r\n    }\r\n  },\r\n  watch: { // This gets fired when the loading dialog needs to takeover.\r\n    loadingDialog (val) {\r\n      if (!val) return\r\n      setTimeout(() => (this.loadingDialog = false), 500)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // testOpenCV () { // For debugging purposes, ensure that OpenCV is loaded and registered correctly\r\n    //   let info = cv.getBuildInformation()\r\n    //   console.log('main created', info, cv)\r\n    // },\r\n    resetCroppa () {\r\n      this.initialImage = null\r\n      this.croppaKey += 1\r\n    },\r\n    next () { // Used to increment through the loading screens\r\n      const active = parseInt(this.active)\r\n      this.active = (active < 5 ? active + 1 : 0)\r\n    },\r\n    loadDemoImage () {\r\n      let image = new Image()\r\n      if (this.imageType === 0) { image.src = '/mecvision/img/type-paper.jpg' }\r\n      if (this.imageType === 1) { image.src = '/mecvision/img/type-magnified.jpg' }\r\n      if (this.imageType === 2) { image.src = '/mecvision/img/type-microscope.jpg' }\r\n      this.initialImage = image\r\n      this.croppa.refresh()\r\n      this.$vuetify.goTo('#croppaBox', {\r\n      })\r\n    },\r\n    async accept () { // Using async/await for moving from image upload to analysis, where image is passed via 'generateDataUrl'\r\n      eventBus.$emit('appLoading')\r\n      eventBus.$emit('toAnalysis')\r\n      eventBus.$emit('loadingScreen')\r\n      this.analysisStarted = true\r\n      this.rawImage = await this.croppa.generateDataUrl('', 1) // Change the number value for increased image resolution (after testing).\r\n      eventBus.$emit('imageType', this.imageType)\r\n      await eventBus.$emit('rawImageReady', this.rawImage)\r\n      this.imageAccepted = true\r\n      await new Promise((resolve, reject) => setTimeout(resolve, 500)) // Timeout of 500ms fixes some problems of trying to pass empty string to analysis.\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scope>\r\n\r\np {\r\n  line-height: 1.5;\r\n}\r\n\r\na {\r\n  text-decoration:none;\r\n}\r\n\r\n#croppaButton {\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n#croppaButton.v-btn:hover:before, #croppaButton.v-btn:focus:before {\r\n  color: transparent;\r\n}\r\n\r\n#croppaBox {\r\n  margin: auto;\r\n  display: block;\r\n  border: 3px dashed var(--v-primary-base);\r\n  border-radius: 0px;\r\n}\r\n\r\n.croppa-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.placeholder_icon {\r\n  width: 100px;\r\n  margin: auto;\r\n  display: block;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Image.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Image.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Image.vue?vue&type=template&id=12f261aa&\"\nimport script from \"./Image.vue?vue&type=script&lang=js&\"\nexport * from \"./Image.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Image.vue?vue&type=style&index=0&scope=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.analysisStarted),expression:\"analysisStarted\"}],attrs:{\"xs12\":\"\",\"md8\":\"\",\"lg8\":\"\",\"xl9\":\"\"}},[_c('v-window',{staticClass:\"elevation-5\",model:{value:(_vm.window),callback:function ($$v) {_vm.window=$$v},expression:\"window\"}},_vm._l((_vm.analyzedImages),function(item){return _c('v-window-item',{key:item.output,attrs:{\"transition\":false,\"reverse-transition\":false}},[_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showAnalysis),expression:\"showAnalysis\"}],staticClass:\"imageCanvasOuter\",attrs:{\"id\":item.output}},[_c('img',{staticClass:\"imageCanvasInner\",staticStyle:{\"height\":\"100px\"},attrs:{\"id\":\"analyzedImage\",\"src\":_vm.analyzedImage}})]),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.showAnalysis),expression:\"!showAnalysis\"}],staticClass:\"imageCanvasOuter\",attrs:{\"id\":item.source}},[_c('img',{staticClass:\"imageCanvasInner\",attrs:{\"id\":\"analyzedImage\",\"src\":_vm.analyzedImage}})])])}),1),_c('v-card',{staticClass:\"my-3\"},[_c('v-card-title',[_c('v-layout',{attrs:{\"align-center\":\"\",\"wrap\":\"\"}},[_c('v-flex',[_c('h1',{class:{'title': _vm.$vuetify.breakpoint.smAndDown, 'display-1': _vm.$vuetify.breakpoint.mdAndUp}},[_vm._v(_vm._s(_vm.analyzedImagesPretty[this.window]))]),_c('h2',{class:{'subheading': _vm.$vuetify.breakpoint.smAndDown, 'title mt-2': _vm.$vuetify.breakpoint.mdAndUp}},[_vm._v(\"(\"+_vm._s(this.window+1)+\" \"+_vm._s(_vm.$t('of'))+\" \"+_vm._s(this.length)+\")\")])]),_c('v-spacer'),_c('v-layout',{class:{'': _vm.$vuetify.breakpoint.smAndDown, 'shrink': _vm.$vuetify.breakpoint.mdAndUp},attrs:{\"justify-end\":\"\",\"row\":\"\"}},[_c('v-flex',{staticClass:\"text-xs-center\",attrs:{\"shrink\":\"\"}},[_c('v-btn',{attrs:{\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.previous}},[_c('v-icon',[_vm._v(\"chevron_left\")])],1)],1),_c('v-flex',{staticClass:\"text-xs-center\",attrs:{\"shrink\":\"\"}},[_c('v-btn',{attrs:{\"icon\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.next}},[_c('v-icon',[_vm._v(\"chevron_right\")])],1)],1)],1)],1)],1)],1)],1),_c('v-flex',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.analysisComplete),expression:\"analysisComplete\"}],class:{'pl-0': _vm.$vuetify.breakpoint.smAndDown, 'pl-3': _vm.$vuetify.breakpoint.mdAndUp},attrs:{\"xs12\":\"\",\"md4\":\"\",\"lg3\":\"\",\"xl3\":\"\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.drawer),expression:\"drawer\"}]},[_c('v-card',{staticClass:\"mb-2\"},[_c('v-card-title',[_c('h4',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('Filters')))])]),_c('v-card-text',{staticClass:\"pt-0\"},[_c('v-layout',[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-flex',{staticClass:\"subheading\"},[_c('span',_vm._g({},on),[_vm._v(_vm._s(_vm.$t('Image Threshold Adjustment')))])])]}}])},[_c('span',[_vm._v(_vm._s(_vm.$t('Image Threshold Adjustment Details')))])])],1),_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',[_c('v-slider',{attrs:{\"max\":255},on:{\"change\":function($event){return _vm.analyze()}},model:{value:(_vm.threshValue),callback:function ($$v) {_vm.threshValue=$$v},expression:\"threshValue\"}})],1),_c('v-flex',{attrs:{\"xs3\":\"\",\"md2\":\"\",\"xl2\":\"\",\"mx-2\":\"\"}},[_c('v-text-field',{staticClass:\"filter\",attrs:{\"solo\":\"\",\"hide-details\":\"\",\"single-line\":\"\"},model:{value:(_vm.threshValue),callback:function ($$v) {_vm.threshValue=$$v},expression:\"threshValue\"}})],1)],1),_c('v-layout',[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-flex',{staticClass:\"subheading\"},[_c('span',_vm._g({},on),[_vm._v(_vm._s(_vm.$t('Minimum Egg Size')))])])]}}])},[_c('span',[_vm._v(_vm._s(_vm.$t(\"Minimum Egg Size Details\")))])])],1),_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"mx-3\":\"\"}},[_c('v-slider',{attrs:{\"min\":0,\"max\":100},on:{\"change\":function($event){return _vm.analyze()}},model:{value:(_vm.minEggRadius),callback:function ($$v) {_vm.minEggRadius=$$v},expression:\"minEggRadius\"}})],1),_c('v-flex',{attrs:{\"xs8\":\"\",\"md5\":\"\",\"lg4\":\"\",\"xl3\":\"\"}},[_c('v-text-field',{attrs:{\"solo\":\"\",\"hide-details\":\"\",\"single-line\":\"\"},model:{value:(_vm.minEggRadius),callback:function ($$v) {_vm.minEggRadius=$$v},expression:\"minEggRadius\"}})],1)],1),_c('v-layout',[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-flex',{staticClass:\"subheading\"},[_c('span',_vm._g({},on),[_vm._v(_vm._s(_vm.$t('Maximum Egg Size')))])])]}}])},[_c('span',[_vm._v(_vm._s(_vm.$t('Maximum Egg Size Details')))])])],1),_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"mx-3\":\"\"}},[_c('v-slider',{attrs:{\"min\":0,\"max\":100},on:{\"change\":function($event){return _vm.analyze()}},model:{value:(_vm.maxEggRadius),callback:function ($$v) {_vm.maxEggRadius=$$v},expression:\"maxEggRadius\"}})],1),_c('v-flex',{attrs:{\"xs8\":\"\",\"md5\":\"\",\"lg4\":\"\",\"xl3\":\"\"}},[_c('v-text-field',{attrs:{\"solo\":\"\",\"hide-details\":\"\",\"single-line\":\"\"},model:{value:(_vm.maxEggRadius),callback:function ($$v) {_vm.maxEggRadius=$$v},expression:\"maxEggRadius\"}})],1)],1),_c('v-layout',[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-flex',{staticClass:\"subheading\"},[_c('span',_vm._g({},on),[_vm._v(_vm._s(_vm.$t('Maximum Cluster Size')))])])]}}])},[_c('span',[_vm._v(_vm._s(_vm.$t('Maximum Cluster Size Details')))])])],1),_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"mx-3\":\"\"}},[_c('v-slider',{attrs:{\"min\":0,\"max\":100},on:{\"change\":function($event){return _vm.analyze()}},model:{value:(_vm.maxEggCluster),callback:function ($$v) {_vm.maxEggCluster=$$v},expression:\"maxEggCluster\"}})],1),_c('v-flex',{attrs:{\"xs8\":\"\",\"md5\":\"\",\"lg4\":\"\",\"xl3\":\"\"}},[_c('v-text-field',{attrs:{\"solo\":\"\",\"hide-details\":\"\",\"single-line\":\"\"},model:{value:(_vm.maxEggCluster),callback:function ($$v) {_vm.maxEggCluster=$$v},expression:\"maxEggCluster\"}})],1)],1),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"align-center\":\"\"}},[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-flex',{staticClass:\"subheading mb-1\"},[_c('span',_vm._g({},on),[_c('p',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('Egg Size Scale')))]),_c('p',{staticClass:\"caption my-0\"},[_c('v-icon',{attrs:{\"small\":\"\",\"color\":\"rgba(0, 0, 225, 255)\"}},[_vm._v(\"fiber_manual_record\")]),_vm._v(\" \"+_vm._s(_vm.$t('Minimum Egg Size')))],1),_c('p',{staticClass:\"caption my-0\"},[_c('v-icon',{attrs:{\"small\":\"\",\"color\":\"rgba(225, 0, 0, 255)\"}},[_vm._v(\"fiber_manual_record\")]),_vm._v(\" \"+_vm._s(_vm.$t('Maximum Egg Size')))],1),_c('p',{staticClass:\"caption my-0\"},[_c('v-icon',{attrs:{\"small\":\"\",\"color\":\"rgba(100, 100, 100, 255)\"}},[_vm._v(\"fiber_manual_record\")]),_vm._v(\" \"+_vm._s(_vm.$t('Too Large / Too Small')))],1)])])]}}])},[_c('span',[_vm._v(_vm._s(_vm.$t('Egg Size Scale Details')))])]),_c('v-flex',[_c('canvas',{staticStyle:{\"margin\":\"auto\",\"display\":\"block\"},attrs:{\"id\":\"legendCanvas\"}},[_c('img',{attrs:{\"id\":\"legendImage\",\"src\":\"/mecvision/img/legend.png\"}})])])],1)],1)],1)],1),_c('v-card',[_c('v-card-title',{staticClass:\"justify-end\"},[_c('h4',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('Analysis')))]),_c('v-spacer'),_c('v-btn',{staticClass:\"mr-0\",attrs:{\"color\":\"primary\",\"dark\":\"\"},on:{\"click\":function($event){_vm.detailsDialog = true}}},[_vm._v(_vm._s(_vm.$t('Details')))])],1),_c('v-divider'),_c('v-list',[_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-2\"},[_c('span',[_c('v-icon',{attrs:{\"small\":\"\",\"color\":\"rgba(0, 0, 225, 255)\"}},[_vm._v(\"fiber_manual_record\")]),_vm._v(_vm._s(_vm.$t('Single Eggs')))],1)]),_c('v-list-tile-content',{staticClass:\"body-2 align-end\"},[_vm._v(_vm._s(this.singlesCount))])],1),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-2\"},[_c('span',[_c('v-icon',{attrs:{\"small\":\"\",\"color\":\"rgba(225, 0, 0, 255)\"}},[_vm._v(\"fiber_manual_record\")]),_vm._v(_vm._s(_vm.$t('Calculated from Clusters')))],1)]),_c('v-list-tile-content',{staticClass:\"body-2 align-end\"},[_vm._v(_vm._s(this.singlesCalculated))])],1),_c('v-divider'),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-2\"},[_vm._v(_vm._s(_vm.$t('Total Egg Estimation')))]),_c('v-list-tile-content',{staticClass:\"body-2 align-end\"},[_vm._v(_vm._s(this.totalEggs))])],1)],1)],1)],1),_c('v-dialog',{attrs:{\"max-width\":\"500px\"},model:{value:(_vm.detailsDialog),callback:function ($$v) {_vm.detailsDialog=$$v},expression:\"detailsDialog\"}},[_c('v-card',[_c('v-card-title',[_c('h2',{staticClass:\"title ml-2\"},[_vm._v(_vm._s(_vm.$t('Details')))])]),_c('v-card-text',[_c('v-list',[_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-1\"},[_vm._v(_vm._s(_vm.$t('Total Single Egg Area')))]),_c('v-list-tile-content',{staticClass:\"align-end body-1\"},[_vm._v(_vm._s(this.singlesTotalArea))])],1),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-1\"},[_vm._v(_vm._s(_vm.$t('Single Egg Average Size')))]),_c('v-list-tile-content',{staticClass:\"align-end body-1\"},[_vm._v(_vm._s(this.singlesAvg))])],1),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-1\"},[_vm._v(_vm._s(_vm.$t('Egg Clusters')))]),_c('v-list-tile-content',{staticClass:\"align-end body-1\"},[_vm._v(_vm._s(this.clustersCount))])],1),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-1\"},[_vm._v(_vm._s(_vm.$t('Total Egg Clusters Area')))]),_c('v-list-tile-content',{staticClass:\"align-end body-1\"},[_vm._v(_vm._s(this.clustersTotalArea))])],1),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-1\"},[_vm._v(_vm._s(_vm.$t('Average Cluster Area')))]),_c('v-list-tile-content',{staticClass:\"align-end body-1\"},[_vm._v(_vm._s(this.avgClusterArea))])],1),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-1\"},[_vm._v(_vm._s(_vm.$t('Average Eggs per Cluster')))]),_c('v-list-tile-content',{staticClass:\"align-end body-1\"},[_vm._v(_vm._s(this.avgEggsPerCluster))])],1),_c('v-list-tile',[_c('v-list-tile-content',{staticClass:\"body-1\"},[_vm._v(_vm._s(_vm.$t('Image Size')))]),_c('v-list-tile-content',{staticClass:\"align-end body-1\"},[_vm._v(_vm._s(this.imageSize))])],1)],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"primary\",\"flat\":\"\"},on:{\"click\":function($event){_vm.detailsDialog=false}}},[_vm._v(_vm._s(_vm.$t('Close')))])],1)],1)],1)],1),_c('v-bottom-nav',{attrs:{\"app\":\"\",\"fixed\":\"\",\"value\":this.showBottom,\"height\":\"70\"}},[_c('v-btn',{attrs:{\"flat\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){return _vm.rerender()}}},[_c('span',[_vm._v(_vm._s(_vm.$t('Reset')))]),_c('v-icon',[_vm._v(\"refresh\")])],1),_c('v-btn',{attrs:{\"flat\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.showAnalysis = !_vm.showAnalysis}}},[_c('span',[_vm._v(_vm._s(_vm.$t('Compare')))]),_c('v-icon',[_vm._v(\"compare\")])],1),_c('v-btn',{attrs:{\"flat\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){$event.stopPropagation();_vm.drawer = !_vm.drawer}}},[_c('span',[_vm._v(_vm._s(_vm.$t('Show Filters')))]),_c('v-icon',[_vm._v(\"tune\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div>\r\n\r\n  <v-container fluid>\r\n    <v-layout row wrap>\r\n      <v-flex xs12 md8 lg8 xl9 v-show=\"analysisStarted\">\r\n\r\n<!-- Analysis window -- increments between analyses, using Vuetify window components -->\r\n<v-window v-model=\"window\" class=\"elevation-5\">\r\n  <v-window-item v-for=\"item in analyzedImages\" :key=\"item.output\" :transition=\"false\" :reverse-transition=\"false\">\r\n\r\n    <!-- OpenCV injects to canvas items -->\r\n    <canvas :id=\"item.output\" class=\"imageCanvasOuter\" v-show=\"showAnalysis\">\r\n      <img class=\"imageCanvasInner\" id=\"analyzedImage\" :src=\"analyzedImage\" style=\"height:100px;\"/>\r\n    </canvas>\r\n\r\n    <!-- Keep a copy of the original source hidden under the analysis, for comparison toggle to work -->\r\n    <canvas :id=\"item.source\" class=\"imageCanvasOuter\" v-show=\"!showAnalysis\">\r\n      <img class=\"imageCanvasInner\" id=\"analyzedImage\" :src=\"analyzedImage\" />\r\n    </canvas>\r\n\r\n  </v-window-item>\r\n  </v-window>\r\n\r\n  <!-- Options for the analysis windows -->\r\n  <v-card class=\"my-3\">\r\n    <v-card-title>\r\n      <v-layout align-center wrap>\r\n        <v-flex>\r\n          <h1 :class=\"{'title': $vuetify.breakpoint.smAndDown, 'display-1': $vuetify.breakpoint.mdAndUp}\">{{ analyzedImagesPretty[this.window] }}</h1>\r\n          <h2 :class=\"{'subheading': $vuetify.breakpoint.smAndDown, 'title mt-2': $vuetify.breakpoint.mdAndUp}\">({{this.window+1}} {{ $t('of') }} {{this.length}})</h2>\r\n        </v-flex>\r\n        <v-spacer></v-spacer>\r\n        <v-layout justify-end row :class=\"{'': $vuetify.breakpoint.smAndDown, 'shrink': $vuetify.breakpoint.mdAndUp}\">\r\n        <v-flex shrink class=\"text-xs-center\">\r\n          <v-btn icon color=\"primary\" @click=\"previous\"><v-icon>chevron_left</v-icon>\r\n          </v-btn>\r\n        </v-flex>\r\n        <v-flex shrink class=\"text-xs-center\">\r\n          <v-btn icon color=\"primary\" @click=\"next\"><v-icon>chevron_right</v-icon>\r\n          </v-btn>\r\n        </v-flex>\r\n        </v-layout>\r\n      </v-layout>\r\n    </v-card-title>\r\n  </v-card>\r\n\r\n  </v-flex>\r\n\r\n  <v-flex xs12 md4 lg3 xl3 :class=\"{'pl-0': $vuetify.breakpoint.smAndDown, 'pl-3': $vuetify.breakpoint.mdAndUp}\" v-show=\"analysisComplete\">\r\n\r\n  <!-- Filters for fine-tuning image and analysis -->\r\n  <div v-show=\"drawer\">\r\n    <v-card class=\"mb-2\">\r\n      <v-card-title>\r\n        <h4 class=\"title\">{{ $t('Filters') }}</h4>\r\n      </v-card-title>\r\n      <v-card-text class=\"pt-0\">\r\n\r\n      <v-layout>\r\n        <v-tooltip bottom>\r\n        <template v-slot:activator=\"{ on }\">\r\n        <v-flex class=\"subheading\"><span v-on=\"on\">{{ $t('Image Threshold Adjustment') }}</span></v-flex>\r\n        </template>\r\n        <span>{{ $t('Image Threshold Adjustment Details') }}</span>\r\n        </v-tooltip>\r\n      </v-layout>\r\n\r\n      <v-layout row>\r\n        <v-flex>\r\n          <v-slider v-model=\"threshValue\" :max=\"255\" @change=\"analyze()\"></v-slider>\r\n        </v-flex>\r\n        <v-flex xs3 md2 xl2 mx-2>\r\n        <v-text-field solo v-model=\"threshValue\" hide-details single-line class=\"filter\"></v-text-field>\r\n        </v-flex>\r\n      </v-layout>\r\n\r\n      <v-layout>\r\n        <v-tooltip bottom>\r\n        <template v-slot:activator=\"{ on }\">\r\n        <v-flex class=\"subheading\"><span v-on=\"on\">{{ $t('Minimum Egg Size') }}</span></v-flex>\r\n        </template>\r\n        <span>{{ $t(\"Minimum Egg Size Details\") }}</span>\r\n        </v-tooltip>\r\n      </v-layout>\r\n\r\n      <v-layout row>\r\n        <v-flex mx-3>\r\n          <v-slider v-model=\"minEggRadius\" :min=\"0\" :max=\"100\" @change=\"analyze()\"></v-slider>\r\n        </v-flex>\r\n        <v-flex xs8 md5 lg4 xl3>\r\n        <v-text-field solo v-model=\"minEggRadius\" hide-details single-line></v-text-field>\r\n        </v-flex>\r\n      </v-layout>\r\n\r\n      <v-layout>\r\n        <v-tooltip bottom>\r\n        <template v-slot:activator=\"{ on }\">\r\n        <v-flex class=\"subheading\"><span v-on=\"on\">{{ $t('Maximum Egg Size') }}</span></v-flex>\r\n        </template>\r\n        <span>{{ $t('Maximum Egg Size Details') }}</span>\r\n        </v-tooltip>\r\n      </v-layout>\r\n\r\n      <v-layout row>\r\n        <v-flex mx-3>\r\n          <v-slider v-model=\"maxEggRadius\" :min=\"0\" :max=\"100\" @change=\"analyze()\"></v-slider>\r\n        </v-flex>\r\n        <v-flex xs8 md5 lg4 xl3>\r\n        <v-text-field solo v-model=\"maxEggRadius\" hide-details single-line></v-text-field>\r\n        </v-flex>\r\n      </v-layout>\r\n\r\n      <v-layout>\r\n        <v-tooltip bottom>\r\n        <template v-slot:activator=\"{ on }\">\r\n        <v-flex class=\"subheading\"><span v-on=\"on\">{{ $t('Maximum Cluster Size') }}</span></v-flex>\r\n        </template>\r\n        <span>{{ $t('Maximum Cluster Size Details') }}</span>\r\n        </v-tooltip>\r\n      </v-layout>\r\n\r\n      <v-layout row>\r\n        <v-flex mx-3>\r\n          <v-slider v-model=\"maxEggCluster\" :min=\"0\" :max=\"100\" @change=\"analyze()\"></v-slider>\r\n        </v-flex>\r\n        <v-flex xs8 md5 lg4 xl3>\r\n        <v-text-field solo v-model=\"maxEggCluster\" hide-details single-line></v-text-field>\r\n        </v-flex>\r\n      </v-layout>\r\n\r\n      <v-layout row wrap align-center>\r\n        <v-tooltip bottom>\r\n        <template v-slot:activator=\"{ on }\">\r\n        <v-flex class=\"subheading mb-1\">\r\n          <span v-on=\"on\">\r\n          <p class=\"mb-1\">{{ $t('Egg Size Scale') }}</p>\r\n          <p class=\"caption my-0\"><v-icon small color=\"rgba(0, 0, 225, 255)\">fiber_manual_record</v-icon> {{ $t('Minimum Egg Size') }}</p>\r\n          <p class=\"caption my-0\"><v-icon small color=\"rgba(225, 0, 0, 255)\">fiber_manual_record</v-icon> {{ $t('Maximum Egg Size') }}</p>\r\n          <p class=\"caption my-0\"><v-icon small color=\"rgba(100, 100, 100, 255)\">fiber_manual_record</v-icon> {{ $t('Too Large / Too Small') }}</p>\r\n          </span>\r\n          </v-flex>\r\n        </template>\r\n        <span>{{ $t('Egg Size Scale Details') }}</span>\r\n        </v-tooltip>\r\n\r\n        <v-flex>\r\n          <canvas id=\"legendCanvas\" style=\"margin: auto; display: block;\"><img id=\"legendImage\" src=\"/mecvision/img/legend.png\" /></canvas>\r\n        </v-flex>\r\n      </v-layout>\r\n\r\n    </v-card-text>\r\n  </v-card>\r\n\r\n  </div>\r\n\r\n  <!-- Analysis Card -- showing details -->\r\n  <v-card>\r\n    <v-card-title class=\"justify-end\">\r\n      <h4 class=\"title\">{{ $t('Analysis') }}</h4>\r\n      <v-spacer></v-spacer>\r\n      <v-btn class=\"mr-0\" color=\"primary\" dark @click=\"detailsDialog = true\">{{ $t('Details') }}</v-btn>\r\n    </v-card-title>\r\n\r\n    <v-divider></v-divider>\r\n\r\n    <v-list>\r\n      <v-list-tile>\r\n        <v-list-tile-content class=\"body-2\"><span><v-icon small color=\"rgba(0, 0, 225, 255)\">fiber_manual_record</v-icon>{{ $t('Single Eggs') }}</span></v-list-tile-content>\r\n        <v-list-tile-content class=\"body-2 align-end\">{{ this.singlesCount }}</v-list-tile-content>\r\n      </v-list-tile>\r\n      <v-list-tile>\r\n        <v-list-tile-content class=\"body-2\"><span><v-icon small color=\"rgba(225, 0, 0, 255)\">fiber_manual_record</v-icon>{{ $t('Calculated from Clusters') }}</span></v-list-tile-content>\r\n        <v-list-tile-content class=\"body-2 align-end\">{{ this.singlesCalculated }}</v-list-tile-content>\r\n      </v-list-tile>\r\n\r\n    <v-divider></v-divider>\r\n\r\n    <v-list-tile>\r\n      <v-list-tile-content class=\"body-2\">{{ $t('Total Egg Estimation') }}</v-list-tile-content>\r\n      <v-list-tile-content class=\"body-2 align-end\">{{ this.totalEggs }}</v-list-tile-content>\r\n    </v-list-tile>\r\n\r\n  </v-list>\r\n</v-card>\r\n</v-flex>\r\n\r\n<!-- Details pop-up window -->\r\n<v-dialog v-model=\"detailsDialog\" max-width=\"500px\">\r\n\r\n  <v-card>\r\n\r\n    <v-card-title>\r\n      <h2 class=\"title ml-2\">{{ $t('Details') }}</h2>\r\n    </v-card-title>\r\n\r\n    <v-card-text>\r\n      <v-list>\r\n        <v-list-tile>\r\n          <v-list-tile-content class=\"body-1\">{{ $t('Total Single Egg Area') }}</v-list-tile-content>\r\n          <v-list-tile-content class=\"align-end body-1\">{{ this.singlesTotalArea }}</v-list-tile-content>\r\n        </v-list-tile>\r\n        <v-list-tile>\r\n          <v-list-tile-content class=\"body-1\">{{ $t('Single Egg Average Size') }}</v-list-tile-content>\r\n          <v-list-tile-content class=\"align-end body-1\">{{ this.singlesAvg }}</v-list-tile-content>\r\n        </v-list-tile>\r\n        <v-list-tile>\r\n          <v-list-tile-content class=\"body-1\">{{ $t('Egg Clusters') }}</v-list-tile-content>\r\n          <v-list-tile-content class=\"align-end body-1\">{{ this.clustersCount }}</v-list-tile-content>\r\n        </v-list-tile>\r\n        <v-list-tile>\r\n          <v-list-tile-content class=\"body-1\">{{ $t('Total Egg Clusters Area') }}</v-list-tile-content>\r\n          <v-list-tile-content class=\"align-end body-1\">{{ this.clustersTotalArea }}</v-list-tile-content>\r\n        </v-list-tile>\r\n        <v-list-tile>\r\n          <v-list-tile-content class=\"body-1\">{{ $t('Average Cluster Area') }}</v-list-tile-content>\r\n          <v-list-tile-content class=\"align-end body-1\">{{ this.avgClusterArea }}</v-list-tile-content>\r\n        </v-list-tile>\r\n        <v-list-tile>\r\n          <v-list-tile-content class=\"body-1\">{{ $t('Average Eggs per Cluster') }}</v-list-tile-content>\r\n          <v-list-tile-content class=\"align-end body-1\">{{ this.avgEggsPerCluster }}</v-list-tile-content>\r\n        </v-list-tile>\r\n        <v-list-tile>\r\n          <v-list-tile-content class=\"body-1\">{{ $t('Image Size') }}</v-list-tile-content>\r\n          <v-list-tile-content class=\"align-end body-1\">{{ this.imageSize }}</v-list-tile-content>\r\n        </v-list-tile>\r\n      </v-list>\r\n\r\n    </v-card-text>\r\n\r\n    <v-card-actions>\r\n      <v-spacer></v-spacer>\r\n      <v-btn color=\"primary\" flat @click=\"detailsDialog=false\">{{ $t('Close') }}</v-btn>\r\n    </v-card-actions>\r\n\r\n  </v-card>\r\n\r\n</v-dialog>\r\n</v-layout>\r\n\r\n<v-bottom-nav app fixed :value=\"this.showBottom\" height=\"70\">\r\n\r\n  <v-btn flat color=\"primary\" @click=\"rerender()\">\r\n    <span>{{ $t('Reset') }}</span>\r\n    <v-icon>refresh</v-icon>\r\n  </v-btn>\r\n\r\n  <v-btn flat color=\"primary\" @click=\"showAnalysis = !showAnalysis\">\r\n    <span>{{ $t('Compare') }}</span>\r\n    <v-icon>compare</v-icon>\r\n  </v-btn>\r\n\r\n  <v-btn flat color=\"primary\" @click.stop=\"drawer = !drawer\">\r\n    <span>{{ $t('Show Filters') }}</span>\r\n    <v-icon>tune</v-icon>\r\n    </v-btn>\r\n\r\n</v-bottom-nav>\r\n\r\n</v-container>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      drawer: false,\r\n      infoExpanded: false,\r\n      eggsize: null,\r\n      analyzedImage: null,\r\n      imageSize: '',\r\n      imageDepth: '',\r\n      imageChannels: '',\r\n      imageType: '',\r\n      showAnalysis: true,\r\n      showBottom: false,\r\n      firstRun: true,\r\n      active: null,\r\n      analyzedImages: [{\r\n        output: 'src', source: 'src2' }, {\r\n        output: 'threshold', source: 'src3' }, {\r\n        output: 'objects', source: 'src5' }, {\r\n        output: 'outlines', source: 'src6' }, {\r\n        output: 'overlay', source: 'src7'\r\n      }],\r\n      analyzedImagesPretty: [\r\n        this.$i18n.t('Source Image'),\r\n        this.$i18n.t('Threshold'),\r\n        this.$i18n.t('Detected Objects'),\r\n        this.$i18n.t('Sorted Markers'),\r\n        this.$i18n.t('Outlined Overlay')\r\n      ],\r\n      analysisStarted: false,\r\n      analysisComplete: false,\r\n      threshValue: 120,\r\n      minEggRadius: 5,\r\n      maxEggRadius: 13,\r\n      maxEggCluster: 30,\r\n      singlesCount: 0,\r\n      clustersCount: 0,\r\n      singlesArray: [],\r\n      singlesTotalArea: 0,\r\n      clustersTotalArea: 0,\r\n      avgClusterArea: 0,\r\n      avgEggsPerCluster: 0,\r\n      singlesAvg: 0,\r\n      clustersArray: [],\r\n      singlesCalculated: 0,\r\n      eggBoxes: 0,\r\n      detectedObjectsArray: [],\r\n      detectedObjectsArrayList: [],\r\n      totalEggs: 0,\r\n      window: 0,\r\n      length: 5,\r\n      detailsDialog: false\r\n    }\r\n  },\r\n  created () {\r\n    eventBus.$on('imageType', (imageType) => {\r\n      if (imageType === 0) {\r\n        this.threshValue = 116\r\n        this.minEggRadius = 1\r\n        this.maxEggRadius = 8\r\n        this.maxEggCluster = 8\r\n      } else if (imageType === 1) {\r\n        this.threshValue = 120\r\n        this.minEggRadius = 5\r\n        this.maxEggRadius = 13\r\n        this.maxEggCluster = 30\r\n      } else {\r\n        this.threshValue = 120\r\n        this.minEggRadius = 4\r\n        this.maxEggRadius = 14\r\n        this.maxEggCluster = 20\r\n      }\r\n    })\r\n    eventBus.$on('rawImageReady', (data) => {\r\n      this.analyzedImage = data\r\n      this.load()\r\n    })\r\n  },\r\n  methods: {\r\n    async load () {\r\n      eventBus.$emit('loadingDialog')\r\n      await new Promise((resolve, reject) => setTimeout(resolve, 2000))\r\n      this.analyze()\r\n      this.turnImages()\r\n    },\r\n    rerender () {\r\n      eventBus.$emit('forceRerender')\r\n    },\r\n    imageMenu (index) {\r\n      this.active = index\r\n    },\r\n    next () {\r\n      this.window = this.window + 1 === this.length\r\n        ? 0\r\n        : this.window + 1\r\n    },\r\n    previous () {\r\n      this.window = this.window - 1 < 0\r\n        ? this.length - 1\r\n        : this.window - 1\r\n    },\r\n    async analyze () {\r\n      // Show 'analysis' components in Vue\r\n      this.analysisStarted = true\r\n\r\n      // INITIALIZATION\r\n      // Load image into OpenCV\r\n      let src = cv.imread('analyzedImage')\r\n      let overlay = src.clone()\r\n\r\n      // Show source image via OpenCV\r\n      cv.imshow('src', src)\r\n\r\n      // Image Info for debugging\r\n      this.imageSize = src.size().width + ' x ' + src.size().height\r\n      this.imageDepth = src.depth()\r\n      this.imageChannels = src.channels()\r\n      this.imageType = src.type()\r\n\r\n      // Create matrices for various analysis activites\r\n      let gray = new cv.Mat()\r\n      let threshold = new cv.Mat()\r\n      let dilate = new cv.Mat()\r\n      let boundingBoxes = new cv.Mat()\r\n      let objects = cv.Mat.zeros(src.rows, src.cols, cv.CV_8UC3)\r\n      let outlines = new cv.Mat(src.rows, src.cols, cv.CV_8UC3, new cv.Scalar(255, 255, 255, 0))\r\n\r\n      // TRANSFORMATIONS\r\n      // Source to Grayscale\r\n      cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY)\r\n\r\n      // Grayscale to Threshold (binary, not adaptive)\r\n      cv.threshold(gray, threshold, this.threshValue, 255, cv.THRESH_BINARY)\r\n\r\n      // Threshold to Dilate [and erode](create new matrix that can be written upon and anchor point (center))\r\n      let M = cv.Mat.ones(3, 3, cv.CV_8U)\r\n      let anchor = new cv.Point(-1, -1)\r\n      cv.dilate(threshold, dilate, M, anchor, 0, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue())\r\n\r\n      // DRAW CONTOURS\r\n      // Create matrices to hold contour counts\r\n      let contours = new cv.MatVector()\r\n      let hierarchy = new cv.Mat()\r\n      let contoursObject = []\r\n      let contoursValues = []\r\n\r\n      // Find contours\r\n      cv.findContours(dilate, contours, hierarchy, cv.RETR_TREE, cv.CHAIN_APPROX_SIMPLE)\r\n\r\n      // CALCULATE SINGLE EGGS AND CLUSTERS\r\n      // Initialize and/or reset single and cluster arrays, counts, and area placeholders for computation\r\n      let detectedObjectsArray = []\r\n      this.singlesArray = []\r\n      this.clustersArray = []\r\n      this.singlesCount = 0\r\n      this.clustersCount = 0\r\n      this.singlesTotalArea = 0\r\n      this.clustersTotalArea = 0\r\n\r\n      // Define colors for contour object detection (boxes) and contour overlay (green=small, blue=single-egg, red=cluster)\r\n      let contoursColor = new cv.Scalar(255, 255, 255)\r\n      let green = new cv.Scalar(0, 225, 0, 255)\r\n      let blue = new cv.Scalar(0, 0, 225, 255)\r\n      let red = new cv.Scalar(255, 0, 0, 255)\r\n      let grayColor = new cv.Scalar(100, 100, 100, 255)\r\n      let minEggArea = Math.PI * (this.minEggRadius * this.minEggRadius)\r\n      let maxEggArea = Math.PI * (this.maxEggRadius * this.maxEggRadius)\r\n      let maxClusterArea = Math.PI * (this.maxEggCluster * this.maxEggCluster)\r\n\r\n      // Main loop\r\n      for (let i = 1; i < contours.size(); ++i) {\r\n        contoursObject.push(cv.contourArea(contours.get(i)))\r\n        contoursValues = Object.values(contoursObject)\r\n        let contourMax = Math.max(...contoursValues)\r\n        if (contourMax === cv.contourArea(contours.get(i))) {\r\n        } else {\r\n          // Draw contours and bounding boxes for all objects detected from 'contours' matrix\r\n          let cnt = contours.get(i)\r\n          let rect = cv.boundingRect(cnt)\r\n          cv.drawContours(objects, contours, i, contoursColor, 1, 8, hierarchy, 100)\r\n          let point1 = new cv.Point((rect.x - 5), (rect.y - 5))\r\n          let point2 = new cv.Point(rect.x + rect.width + 5, rect.y + rect.height + 5)\r\n          if (hierarchy.intPtr(0, i)[0] === -1 || hierarchy.intPtr(0, i)[1] === -1 || hierarchy.intPtr(0, i)[2] === -1 || hierarchy.intPtr(0, i)[3] === -1) {\r\n            cv.rectangle(objects, point1, point2, green, 1, cv.LINE_AA, 0)\r\n          } else {\r\n            cv.rectangle(objects, point1, point2, green, 3, cv.LINE_AA, 0)\r\n          }\r\n          // Create matrix for points of objects for all objects, even if not calculated immediately (until individual boxes invoked)\r\n          boundingBoxes = src.roi(rect)\r\n          detectedObjectsArray.push(boundingBoxes)\r\n          // Loop through all contours and sort/color by size, drawing on both outlines and overlay images (as well as counting towards array counts)\r\n          if (cv.contourArea(contours.get(i)) <= minEggArea) {\r\n            cv.drawContours(outlines, contours, i, grayColor, -1, cv.LINE_8, hierarchy, 0)\r\n            cv.drawContours(overlay, contours, i, grayColor, 1, cv.LINE_8, hierarchy, 0)\r\n          } else if (cv.contourArea(contours.get(i)) > minEggArea && cv.contourArea(contours.get(i)) <= maxEggArea) {\r\n            cv.drawContours(outlines, contours, i, blue, -1, cv.LINE_8, hierarchy, 0)\r\n            cv.drawContours(overlay, contours, i, blue, 1, cv.LINE_8, hierarchy, 0)\r\n            this.singlesArray.push(cv.contourArea(contours.get(i)))\r\n            ++this.singlesCount\r\n          } else if (cv.contourArea(contours.get(i)) > maxEggArea && cv.contourArea(contours.get(i)) <= maxClusterArea) {\r\n            cv.drawContours(outlines, contours, i, red, -1, cv.LINE_8, hierarchy, 0)\r\n            cv.drawContours(overlay, contours, i, red, 1, cv.LINE_8, hierarchy, 0)\r\n            this.clustersArray.push(cv.contourArea(contours.get(i)))\r\n            ++this.clustersCount\r\n          } else if (cv.contourArea(contours.get(i)) > maxClusterArea) {\r\n            cv.drawContours(outlines, contours, i, grayColor, -1, cv.LINE_8, hierarchy, 0)\r\n            cv.drawContours(overlay, contours, i, grayColor, 1, cv.LINE_8, hierarchy, 0)\r\n          }\r\n        }\r\n      }\r\n\r\n      // CALCULATIONS\r\n      // Use array counts to calculate single size averages, single size area, cluster average, and cluster area\r\n      for (let i = 0; i < this.singlesArray.length; i++) { this.singlesTotalArea += this.singlesArray[i] }\r\n      this.singlesAvg = (this.singlesTotalArea / this.singlesArray.length).toFixed(2)\r\n      if (isNaN(this.singlesAvg)) this.singlesAvg = 0\r\n\r\n      // Calculate cluster area if not zero, append to total cluster area of image\r\n      if (this.clustersCount === 0) {} else {\r\n        for (let i = 0; i < this.clustersArray.length; i++) {\r\n          this.clustersTotalArea += this.clustersArray[i]\r\n        }\r\n      }\r\n\r\n      // Calculate and convert to output formats\r\n      this.singlesCalculated = (this.clustersTotalArea / this.singlesAvg).toFixed(0)\r\n      if (isNaN(this.singlesCalculated)) this.singlesCalculated = 0\r\n      this.avgClusterArea = (this.clustersTotalArea / this.clustersCount).toFixed(2)\r\n      if (isNaN(this.avgClusterArea)) this.avgClusterArea = 0\r\n      this.avgEggsPerCluster = (this.avgClusterArea / this.singlesAvg).toFixed(1)\r\n      if (isNaN(this.avgEggsPerCluster)) this.avgEggsPerCluster = 0\r\n      this.totalEggs = +this.singlesCount + +this.singlesCalculated\r\n      this.eggEstimate = contours.size() // Egg estimation from contours\r\n\r\n      // Show images\r\n      cv.imshow('src', src)\r\n      cv.imshow('src2', src)\r\n      cv.imshow('src3', src)\r\n      cv.imshow('src5', src)\r\n      cv.imshow('src6', src)\r\n      cv.imshow('src7', src)\r\n      cv.imshow('threshold', threshold)\r\n      cv.imshow('objects', objects)\r\n      cv.imshow('outlines', outlines)\r\n      cv.imshow('overlay', overlay)\r\n\r\n      // Show legend image\r\n      let legend = cv.imread('legendImage')\r\n      cv.circle(legend, new cv.Point(50, 50), this.minEggRadius, blue, 1) // Blue inner circle\r\n      cv.circle(legend, new cv.Point(50, 50), this.maxEggRadius, red, 1) // Red outer circle\r\n      cv.circle(legend, new cv.Point(50, 50), this.maxEggCluster, grayColor, 1) // Gray outer circle\r\n      cv.imshow('legendCanvas', legend)\r\n      legend.delete()\r\n\r\n      // Delete matrices to save on memory\r\n      src.delete()\r\n      gray.delete()\r\n      threshold.delete()\r\n      dilate.delete()\r\n      objects.delete()\r\n      outlines.delete()\r\n      overlay.delete()\r\n      M.delete()\r\n      contours.delete()\r\n      hierarchy.delete()\r\n    },\r\n    async turnImages () {\r\n      // Use time delays to display calculation images and rotate when done calculating\r\n      for (let i = 4; this.window < i; ++this.window) {\r\n        await new Promise((resolve, reject) => setTimeout(resolve, 500))\r\n      }\r\n\r\n      // After timeout, show analysis results\r\n      await new Promise((resolve, reject) => setTimeout(resolve, 500))\r\n      this.analysisComplete = true\r\n\r\n      // After timeout, show bottom menu\r\n      await new Promise((resolve, reject) => setTimeout(resolve, 500))\r\n      this.showBottom = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scope>\r\n\r\n.imageCanvasOuter {\r\n  width: 100%;\r\n  height: 100%;\r\n  /* border: 3px dashed grey; */\r\n  display: flex;\r\n}\r\n\r\n.imageCanvasOuterBoxes {\r\n  max-height: 200px;\r\n  width: 100%;\r\n  display: flex;\r\n}\r\n\r\n.imageCanvasInner {\r\n  height: 100%;\r\n}\r\n\r\n.legendCanvas {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n\r\n.v-text-field {\r\n  font-size: .9em;\r\n}\r\n\r\n.v-input .filter {\r\n  text-align: right;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Analysis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Analysis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Analysis.vue?vue&type=template&id=aa3f42a4&\"\nimport script from \"./Analysis.vue?vue&type=script&lang=js&\"\nexport * from \"./Analysis.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Analysis.vue?vue&type=style&index=0&scope=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <component :key=\"componentKey\" :is=\"visionComponent\"></component>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\nimport AppImage from './Image.vue'\r\nimport AppAnalysis from './Analysis.vue'\r\n\r\nexport default {\r\n  components: {\r\n    AppImage,\r\n    AppAnalysis\r\n  },\r\n  data () {\r\n    return {\r\n      componentKey: 0, // Just as with the main app, the 'reset image' button the bottom bar resets this specific component.\r\n      visionComponent: AppImage // Starts with AppImage by default, waiting for the eventBus to fire to tell it to switch to Analysis.\r\n    }\r\n  },\r\n  created () {\r\n    eventBus.$on('toAnalysis', () => {\r\n      this.visionComponent = 'AppAnalysis' // Switches to Analysis component.\r\n    })\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vision.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Vision.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Vision.vue?vue&type=template&id=0e3a2246&\"\nimport script from \"./Vision.vue?vue&type=script&lang=js&\"\nexport * from \"./Vision.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-2\"},[_vm._v(\"Overview\")]),_c('div',[_c('p',[_vm._v(\"MECVision is a Progressive Web App (PWA) that uses computer vision (object detection) to estimate the number of mosquito eggs on ovitrap paper.\")]),_c('p',[_vm._v(\"This website will work with most smartphones (iOS and Android), as well as desktop and laptop computers. The website, because it is a PWA, behaves in many ways like a native phone app, which allows it to be used offline, to use a phone's photos and camera, and to allow it to be placed on a phone home screen, alongside native apps.\")]),_c('p',[_vm._v(\"The algorithmic processing of the app uses a tool known as \\\"OpenCV\\\" (Open Computer Vision) which analyzes an image in order to highlight contrast, detect edges, find contours of objects within an image, and to make calculations based on that analysis. For MECVision, we use several algorithmic procedures tied together, in order to isolate the mosquito egg items and count them separately.\")])])])])],1)],1)],1),_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-2\"},[_vm._v(\"Using MECVision\")]),_c('div',[_c('h3',[_vm._v(\"1. Load an Image\")]),_c('p',[_vm._v(\"The app (or website) is very simple. Once it loads onto a device's web-browser, it loads all of the app code it needs to operate so that no information will be sent to a remote server or database -- everything is happening on the device to which it is loaded.\")]),_c('h3',[_vm._v(\"2. Adjust the Image\")]),_c('p',[_vm._v(\"After the app loads, a user can either take a picture, or upload one from their device (or use the 'demo' pictures in memory to see it work). Once selected, the user then adjusts the image by zooming in and out (using 'pinch-and-zoom' on a phone or with the scroll function on a desktop), as well as things like rotating and cropping. Additionally, you can select the 'type' of image you're analyzing -- a classic ovitrap paper, or magnified or microscoped image (and more can be added later) -- this helps to analyze the image using the appropriate algorithm.\")]),_c('h3',[_vm._v(\"3. Analyze the Image\")]),_c('p',[_vm._v(\"Once the image has been adjusted, the user presses the button to 'analyze' the image. At this point, the app uses a software technique (open-source library) to analyze the image and find matches within the image that match the pattern as close as possible to mosquito eggs and mosquito egg clusters. At this point, the user can see the algorithm run through its process of converting the image to black and white (threshold value), detecting objects in the image, sorting the detected objects by size, and then overlaying the detected objects on top of the original image.\")]),_c('h3',[_vm._v(\"4. Review the Analysis\")]),_c('p',[_vm._v(\"When the analysis is complete, the total egg estimation will be displayed. The user can also see a disaggregation of single egg counts versus clustered egg counts, as well as additional 'details' in the pop-up button. Additionally, the user can 'compare' the output at each stage of the algorithm process by pressing the 'compare' button, along with toggling the left-right arrows to review the algorithm processes in order.\")]),_c('h3',[_vm._v(\"5. Adjust the Algorithm\")]),_c('p',[_vm._v(\"Depending on the process and image used, it might be necessary to adjust the filters and threshold value. This can be done by selecting the 'show filters' button and reviewing the various settings, including ways to adjust the threshold value (where items become black or white), and the single egg minimum and maximum values, as well as maximum cluster size (to filter out large foreign objects like insects or dirt). When a value is changed here, the algorithm is updated automatically (without the animation) to reflect the new values.\")])])])])],1)],1)],1),_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-3\"},[_vm._v(\"Tips for Accurate Results\")]),_c('div',[_c('h3',[_vm._v(\"Camera Quality\")]),_c('p',[_vm._v(\"Use the highest-quality and resolution camera available, even if it is not with a smartphone device. The app can use images that are in the phone's photo library -- they do \"),_c('em',[_vm._v(\"not\")]),_vm._v(\" have to be taken with that particular device.\")]),_c('h3',[_vm._v(\"Camera Placement\")]),_c('p',[_vm._v(\"Capture the picture as close to the egg paper as possible while still capturing the entire paper. Ensure that the camera is perpendicular and directly above the image as much as possible -- and not taken from an angle.\")]),_c('h3',[_vm._v(\"Environment and Lighting\")]),_c('p',[_vm._v(\"Capture the image in a place with bright and consistent lighting. Try to avoid using the camera flash, as this creates both shadows which can be misidentified as eggs. Additionally, try to do everything possible to increase the contrast in the image between the eggs and the paper -- this makes the algorithm work more accurately.\")]),_c('h3',[_vm._v(\"Egg Paper Type and Quality\")]),_c('p',[_vm._v(\"There is a lot of variation in egg paper (ovitrap paper), and so try to have a consistent process throughout the various counts. Ensure that the egg paper is as flat as possible, with as few folds and wrinkles in the paper, as this causes shadows which may be misidentified as eggs. Additionally, try to use a background color that is different than the egg paper, as this will make it easier to crop the picture within the app.\")]),_c('h3',[_vm._v(\"Consistency and the Algorithm\")]),_c('p',[_vm._v(\"The MECVision app works best when used in a controlled and consistent environment. The best types of images are ones that are consist in all their qualities except for the number of eggs on the paper, which the app should capture differently. The app itself is susceptible to changes in lighting, focus, and processing demands, and so there will be some small variation from picture to picture (similar to human counts!) The best ways to ensure consistency is to focus on finding a consistent process, and then using consistent filtering and thresholding values that match the image environment.\")]),_c('h3',[_vm._v(\"A Note about Data Retention\")]),_c('p',[_vm._v(\"The app, because it is a web app, does \"),_c('em',[_vm._v(\"not\")]),_vm._v(\" save data locally to a device, and it is never sent to a server or external database. Once the page is refreshed, the previous data is erased. It is much like a functional calculator in this way, with no history. Ensure that your counting process is consistent and is collected in another location prior to adapting the MECVision app entirely!\")])])])])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n<div>\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-2\">Overview</h3>\r\n          <div>\r\n            <p>MECVision is a Progressive Web App (PWA) that uses computer vision (object detection) to estimate the number of mosquito eggs on ovitrap paper.</p>\r\n            <p>This website will work with most smartphones (iOS and Android), as well as desktop and laptop computers. The website, because it is a PWA, behaves in many ways like a native phone app, which allows it to be used offline, to use a phone's photos and camera, and to allow it to be placed on a phone home screen, alongside native apps.</p>\r\n            <p>The algorithmic processing of the app uses a tool known as \"OpenCV\" (Open Computer Vision) which analyzes an image in order to highlight contrast, detect edges, find contours of objects within an image, and to make calculations based on that analysis. For MECVision, we use several algorithmic procedures tied together, in order to isolate the mosquito egg items and count them separately.</p>\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-2\">Using MECVision</h3>\r\n          <div>\r\n            <h3>1. Load an Image</h3>\r\n            <p>The app (or website) is very simple. Once it loads onto a device's web-browser, it loads all of the app code it needs to operate so that no information will be sent to a remote server or database -- everything is happening on the device to which it is loaded.</p>\r\n            <h3>2. Adjust the Image</h3>\r\n            <p>After the app loads, a user can either take a picture, or upload one from their device (or use the 'demo' pictures in memory to see it work). Once selected, the user then adjusts the image by zooming in and out (using 'pinch-and-zoom' on a phone or with the scroll function on a desktop), as well as things like rotating and cropping. Additionally, you can select the 'type' of image you're analyzing -- a classic ovitrap paper, or magnified or microscoped image (and more can be added later) -- this helps to analyze the image using the appropriate algorithm.</p>\r\n            <h3>3. Analyze the Image</h3>\r\n            <p>Once the image has been adjusted, the user presses the button to 'analyze' the image. At this point, the app uses a software technique (open-source library) to analyze the image and find matches within the image that match the pattern as close as possible to mosquito eggs and mosquito egg clusters. At this point, the user can see the algorithm run through its process of converting the image to black and white (threshold value), detecting objects in the image, sorting the detected objects by size, and then overlaying the detected objects on top of the original image.</p>\r\n            <h3>4. Review the Analysis</h3>\r\n            <p>When the analysis is complete, the total egg estimation will be displayed. The user can also see a disaggregation of single egg counts versus clustered egg counts, as well as additional 'details' in the pop-up button. Additionally, the user can 'compare' the output at each stage of the algorithm process by pressing the 'compare' button, along with toggling the left-right arrows to review the algorithm processes in order.</p>\r\n            <h3>5. Adjust the Algorithm</h3>\r\n            <p>Depending on the process and image used, it might be necessary to adjust the filters and threshold value. This can be done by selecting the 'show filters' button and reviewing the various settings, including ways to adjust the threshold value (where items become black or white), and the single egg minimum and maximum values, as well as maximum cluster size (to filter out large foreign objects like insects or dirt). When a value is changed here, the algorithm is updated automatically (without the animation) to reflect the new values.</p>\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-3\">Tips for Accurate Results</h3>\r\n          <div>\r\n            <h3>Camera Quality</h3>\r\n            <p>Use the highest-quality and resolution camera available, even if it is not with a smartphone device. The app can use images that are in the phone's photo library -- they do <em>not</em> have to be taken with that particular device.</p>\r\n            <h3>Camera Placement</h3>\r\n            <p>Capture the picture as close to the egg paper as possible while still capturing the entire paper. Ensure that the camera is perpendicular and directly above the image as much as possible -- and not taken from an angle.</p>\r\n            <h3>Environment and Lighting</h3>\r\n            <p>Capture the image in a place with bright and consistent lighting. Try to avoid using the camera flash, as this creates both shadows which can be misidentified as eggs. Additionally, try to do everything possible to increase the contrast in the image between the eggs and the paper -- this makes the algorithm work more accurately.</p>\r\n            <h3>Egg Paper Type and Quality</h3>\r\n            <p>There is a lot of variation in egg paper (ovitrap paper), and so try to have a consistent process throughout the various counts. Ensure that the egg paper is as flat as possible, with as few folds and wrinkles in the paper, as this causes shadows which may be misidentified as eggs. Additionally, try to use a background color that is different than the egg paper, as this will make it easier to crop the picture within the app.</p>\r\n            <h3>Consistency and the Algorithm</h3>\r\n            <p>The MECVision app works best when used in a controlled and consistent environment. The best types of images are ones that are consist in all their qualities except for the number of eggs on the paper, which the app should capture differently. The app itself is susceptible to changes in lighting, focus, and processing demands, and so there will be some small variation from picture to picture (similar to human counts!) The best ways to ensure consistency is to focus on finding a consistent process, and then using consistent filtering and thresholding values that match the image environment.</p>\r\n            <h3>A Note about Data Retention</h3>\r\n            <p>The app, because it is a web app, does <em>not</em> save data locally to a device, and it is never sent to a server or external database. Once the page is refreshed, the previous data is erased. It is much like a functional calculator in this way, with no history. Ensure that your counting process is consistent and is collected in another location prior to adapting the MECVision app entirely!</p>\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Guide.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Guide.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Guide.vue?vue&type=template&id=82d451b2&\"\nimport script from \"./Guide.vue?vue&type=script&lang=js&\"\nexport * from \"./Guide.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-2\"},[_vm._v(\"Visión General\")]),_c('div',[_c('p',[_vm._v(\"MECVision es una aplicación web progresiva (PWA) que utiliza la visión por computadora (detección de objetos) para estimar la cantidad de huevos de mosquito en papel ovitraprap.\")]),_c('p',[_vm._v(\"Este sitio web funcionará con la mayoría de los teléfonos inteligentes (iOS y Android), así como con computadoras de escritorio y portátiles. El sitio web, debido a que es una PWA, se comporta de muchas maneras como una aplicación de teléfono nativa, lo que permite que se use sin conexión, para usar las fotos y la cámara de un teléfono, y para permitir que se coloque en la pantalla de inicio de un teléfono, junto con la aplicación nativa aplicaciones.\")]),_c('p',[_vm._v(\"El procesamiento algorítmico de la aplicación utiliza una herramienta conocida como \\\"OpenCV\\\" (Open Computer Vision) que analiza una imagen para resaltar el contraste, detectar bordes, encontrar contornos de objetos dentro de una imagen y hacer cálculos basados en ese análisis. Para MECVision, utilizamos varios procedimientos algorítmicos unidos, para aislar los elementos de huevo de mosquito y contarlos por separado.\")])])])])],1)],1)],1),_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-2\"},[_vm._v(\"Usando MECVision\")]),_c('div',[_c('h3',[_vm._v(\"1. Cargar una Imagen\")]),_c('p',[_vm._v(\"La aplicación (o sitio web) es muy simple. Una vez que se carga en el navegador web de un dispositivo, carga todo el código de la aplicación que necesita para funcionar, de modo que no se envíe información a un servidor remoto o base de datos; todo está sucediendo en el dispositivo en el que se carga.\")]),_c('h3',[_vm._v(\"2. Ajuste la Imagen.\")]),_c('p',[_vm._v(\"Después de que se carga la aplicación, un usuario puede tomar una foto o cargar una desde su dispositivo (o usar las imágenes de 'demostración' en la memoria para verla funcionar). Una vez seleccionado, el usuario ajusta la imagen al acercar y alejar (usando 'pellizcar y hacer zoom' en un teléfono o con la función de desplazamiento en un escritorio), así como cosas como rotar y recortar. Además, puede seleccionar el 'tipo' de imagen que está analizando: un papel de ovitrap clásico o una imagen ampliada o microscópica (y se puede agregar más más adelante), esto ayuda a analizar la imagen usando el algoritmo apropiado.\")]),_c('h3',[_vm._v(\"3. Analiza la Imagen.\")]),_c('p',[_vm._v(\"Una vez que la imagen ha sido ajustada, el usuario presiona el botón para 'analizar' la imagen. En este punto, la aplicación utiliza una técnica de software (biblioteca de código abierto) para analizar la imagen y encontrar coincidencias dentro de la imagen que coincidan con el patrón lo más cerca posible de los huevos de mosquito y los racimos de huevos de mosquito. En este punto, el usuario puede ver el algoritmo ejecutar su proceso de convertir la imagen a blanco y negro (valor umbral), detectar objetos en la imagen, ordenar los objetos detectados por tamaño y luego superponer los objetos detectados en la parte superior del imagen original.\")]),_c('h3',[_vm._v(\"4. Revise el Análisis.\")]),_c('p',[_vm._v(\"Cuando se completa el análisis, se mostrará la estimación total del huevo. El usuario también puede ver una desagregación de recuentos de huevos individuales versus recuentos de huevos agrupados, así como 'detalles' adicionales en el botón emergente. Además, el usuario puede 'comparar' la salida en cada etapa del proceso del algoritmo presionando el botón 'comparar', junto con alternar las flechas izquierda-derecha para revisar los procesos del algoritmo en orden.\")]),_c('h3',[_vm._v(\"5. Ajuste el Algoritmo.\")]),_c('p',[_vm._v(\"Dependiendo del proceso y la imagen utilizada, puede ser necesario ajustar los filtros y el valor umbral. Esto se puede hacer seleccionando el botón 'Mostrar filtros' y revisando las diversas configuraciones, incluidas las formas de ajustar el valor umbral (donde los elementos se vuelven negros o blancos), y los valores mínimos y máximos de un solo huevo, así como el tamaño máximo del grupo ( para filtrar objetos extraños grandes como insectos o tierra). Cuando se cambia un valor aquí, el algoritmo se actualiza automáticamente (sin la animación) para reflejar los nuevos valores.\")])])])])],1)],1)],1),_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-3\"},[_vm._v(\"Consejos para Resultados Precisos\")]),_c('div',[_c('h3',[_vm._v(\"Calidad de la Cámara\")]),_c('p',[_vm._v(\"Use la cámara de mayor calidad y resolución disponible, incluso si no es con un teléfono inteligente. La aplicación puede usar imágenes que se encuentran en la biblioteca de fotos del teléfono -- \"),_c('em',[_vm._v(\"no\")]),_vm._v(\" deben tomarse con ese dispositivo en particular.\")]),_c('h3',[_vm._v(\"Colocación de Cámara\")]),_c('p',[_vm._v(\"Capture la imagen lo más cerca posible del papel de huevo mientras captura todo el papel. Asegúrese de que la cámara esté perpendicular y directamente sobre la imagen tanto como sea posible, y que no esté tomada desde un ángulo.\")]),_c('h3',[_vm._v(\"Ambiente e Iluminación\")]),_c('p',[_vm._v(\"Capture la imagen en un lugar con iluminación brillante y constante. Trate de evitar el uso del flash de la cámara, ya que esto crea sombras que pueden identificarse erróneamente como huevos. Además, intente hacer todo lo posible para aumentar el contraste en la imagen entre los huevos y el papel; esto hace que el algoritmo funcione con mayor precisión.\")]),_c('h3',[_vm._v(\"Tipo de Papel de Huevo y Calidad\")]),_c('p',[_vm._v(\"Hay mucha variación en el papel de huevo (papel ovitrap) y, por lo tanto, trate de tener un proceso constante a lo largo de los diversos recuentos. Asegúrese de que el papel de huevo sea lo más plano posible, con el menor número de pliegues y arrugas en el papel, ya que esto causa sombras que pueden ser mal identificadas como huevos. Además, intente utilizar un color de fondo que sea diferente al papel de huevo, ya que esto facilitará el recorte de la imagen dentro de la aplicación.\")]),_c('h3',[_vm._v(\"La Consistencia y el Algoritmo\")]),_c('p',[_vm._v(\"La aplicación MECVision funciona mejor cuando se usa en un entorno controlado y consistente. Los mejores tipos de imágenes son las que consisten en todas sus cualidades, excepto la cantidad de huevos en el papel, que la aplicación debería capturar de manera diferente. La aplicación en sí es susceptible a cambios en la iluminación, el enfoque y las demandas de procesamiento, por lo que habrá una pequeña variación de una imagen a otra (¡similar a los recuentos humanos!). Las mejores formas de garantizar la coherencia es centrarse en encontrar un proceso coherente, y luego usando valores consistentes de filtrado y umbral que coinciden con el entorno de la imagen.\")]),_c('h3',[_vm._v(\"Una Nota Sobre la Retención de Datos\")]),_c('p',[_vm._v(\"La aplicación, debido a que es una aplicación web, no guarda datos localmente en un dispositivo, y nunca se envía a un servidor o base de datos externa. Una vez que se actualiza la página, se borran los datos anteriores. Es muy parecido a una calculadora funcional de esta manera, sin historial. ¡Asegúrese de que su proceso de conteo sea consistente y se recopile en otra ubicación antes de adaptar completamente la aplicación MECVision!\")])])])])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n<div>\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-2\">Visión General</h3>\r\n          <div>\r\n            <p>MECVision es una aplicación web progresiva (PWA) que utiliza la visión por computadora (detección de objetos) para estimar la cantidad de huevos de mosquito en papel ovitraprap.</p>\r\n            <p>Este sitio web funcionará con la mayoría de los teléfonos inteligentes (iOS y Android), así como con computadoras de escritorio y portátiles. El sitio web, debido a que es una PWA, se comporta de muchas maneras como una aplicación de teléfono nativa, lo que permite que se use sin conexión, para usar las fotos y la cámara de un teléfono, y para permitir que se coloque en la pantalla de inicio de un teléfono, junto con la aplicación nativa aplicaciones.</p>\r\n            <p>El procesamiento algorítmico de la aplicación utiliza una herramienta conocida como \"OpenCV\" (Open Computer Vision) que analiza una imagen para resaltar el contraste, detectar bordes, encontrar contornos de objetos dentro de una imagen y hacer cálculos basados en ese análisis. Para MECVision, utilizamos varios procedimientos algorítmicos unidos, para aislar los elementos de huevo de mosquito y contarlos por separado.</p>\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-2\">Usando MECVision</h3>\r\n          <div>\r\n            <h3>1. Cargar una Imagen</h3>\r\n            <p>La aplicación (o sitio web) es muy simple. Una vez que se carga en el navegador web de un dispositivo, carga todo el código de la aplicación que necesita para funcionar, de modo que no se envíe información a un servidor remoto o base de datos; todo está sucediendo en el dispositivo en el que se carga.</p>\r\n            <h3>2. Ajuste la Imagen.</h3>\r\n            <p>Después de que se carga la aplicación, un usuario puede tomar una foto o cargar una desde su dispositivo (o usar las imágenes de 'demostración' en la memoria para verla funcionar). Una vez seleccionado, el usuario ajusta la imagen al acercar y alejar (usando 'pellizcar y hacer zoom' en un teléfono o con la función de desplazamiento en un escritorio), así como cosas como rotar y recortar. Además, puede seleccionar el 'tipo' de imagen que está analizando: un papel de ovitrap clásico o una imagen ampliada o microscópica (y se puede agregar más más adelante), esto ayuda a analizar la imagen usando el algoritmo apropiado.</p>\r\n            <h3>3. Analiza la Imagen.</h3>\r\n            <p>Una vez que la imagen ha sido ajustada, el usuario presiona el botón para 'analizar' la imagen. En este punto, la aplicación utiliza una técnica de software (biblioteca de código abierto) para analizar la imagen y encontrar coincidencias dentro de la imagen que coincidan con el patrón lo más cerca posible de los huevos de mosquito y los racimos de huevos de mosquito. En este punto, el usuario puede ver el algoritmo ejecutar su proceso de convertir la imagen a blanco y negro (valor umbral), detectar objetos en la imagen, ordenar los objetos detectados por tamaño y luego superponer los objetos detectados en la parte superior del imagen original.</p>\r\n            <h3>4. Revise el Análisis.</h3>\r\n            <p>Cuando se completa el análisis, se mostrará la estimación total del huevo. El usuario también puede ver una desagregación de recuentos de huevos individuales versus recuentos de huevos agrupados, así como 'detalles' adicionales en el botón emergente. Además, el usuario puede 'comparar' la salida en cada etapa del proceso del algoritmo presionando el botón 'comparar', junto con alternar las flechas izquierda-derecha para revisar los procesos del algoritmo en orden.</p>\r\n            <h3>5. Ajuste el Algoritmo.</h3>\r\n            <p>Dependiendo del proceso y la imagen utilizada, puede ser necesario ajustar los filtros y el valor umbral. Esto se puede hacer seleccionando el botón 'Mostrar filtros' y revisando las diversas configuraciones, incluidas las formas de ajustar el valor umbral (donde los elementos se vuelven negros o blancos), y los valores mínimos y máximos de un solo huevo, así como el tamaño máximo del grupo ( para filtrar objetos extraños grandes como insectos o tierra). Cuando se cambia un valor aquí, el algoritmo se actualiza automáticamente (sin la animación) para reflejar los nuevos valores.</p>\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-3\">Consejos para Resultados Precisos</h3>\r\n          <div>\r\n            <h3>Calidad de la Cámara</h3>\r\n            <p>Use la cámara de mayor calidad y resolución disponible, incluso si no es con un teléfono inteligente. La aplicación puede usar imágenes que se encuentran en la biblioteca de fotos del teléfono -- <em>no</em> deben tomarse con ese dispositivo en particular.</p>\r\n            <h3>Colocación de Cámara</h3>\r\n            <p>Capture la imagen lo más cerca posible del papel de huevo mientras captura todo el papel. Asegúrese de que la cámara esté perpendicular y directamente sobre la imagen tanto como sea posible, y que no esté tomada desde un ángulo.</p>\r\n            <h3>Ambiente e Iluminación</h3>\r\n            <p>Capture la imagen en un lugar con iluminación brillante y constante. Trate de evitar el uso del flash de la cámara, ya que esto crea sombras que pueden identificarse erróneamente como huevos. Además, intente hacer todo lo posible para aumentar el contraste en la imagen entre los huevos y el papel; esto hace que el algoritmo funcione con mayor precisión.</p>\r\n            <h3>Tipo de Papel de Huevo y Calidad</h3>\r\n            <p>Hay mucha variación en el papel de huevo (papel ovitrap) y, por lo tanto, trate de tener un proceso constante a lo largo de los diversos recuentos. Asegúrese de que el papel de huevo sea lo más plano posible, con el menor número de pliegues y arrugas en el papel, ya que esto causa sombras que pueden ser mal identificadas como huevos. Además, intente utilizar un color de fondo que sea diferente al papel de huevo, ya que esto facilitará el recorte de la imagen dentro de la aplicación.</p>\r\n            <h3>La Consistencia y el Algoritmo</h3>\r\n            <p>La aplicación MECVision funciona mejor cuando se usa en un entorno controlado y consistente. Los mejores tipos de imágenes son las que consisten en todas sus cualidades, excepto la cantidad de huevos en el papel, que la aplicación debería capturar de manera diferente. La aplicación en sí es susceptible a cambios en la iluminación, el enfoque y las demandas de procesamiento, por lo que habrá una pequeña variación de una imagen a otra (¡similar a los recuentos humanos!). Las mejores formas de garantizar la coherencia es centrarse en encontrar un proceso coherente, y luego usando valores consistentes de filtrado y umbral que coinciden con el entorno de la imagen.</p>\r\n            <h3>Una Nota Sobre la Retención de Datos</h3>\r\n            <p>La aplicación, debido a que es una aplicación web, no guarda datos localmente en un dispositivo, y nunca se envía a un servidor o base de datos externa. Una vez que se actualiza la página, se borran los datos anteriores. Es muy parecido a una calculadora funcional de esta manera, sin historial. ¡Asegúrese de que su proceso de conteo sea consistente y se recopile en otra ubicación antes de adaptar completamente la aplicación MECVision!</p>\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Guide-es.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Guide-es.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Guide-es.vue?vue&type=template&id=e2add5d6&\"\nimport script from \"./Guide-es.vue?vue&type=script&lang=js&\"\nexport * from \"./Guide-es.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-3\"},[_vm._v(\"About\")]),_c('div',[_c('p',[_vm._v(\"MECVision is a Progressive Web App (PWA) that uses computer vision (object detection) to estimate the number of mosquito eggs on ovitrap paper.\")]),_c('p',[_vm._v(\"Check out the \"),_c('a',{attrs:{\"href\":\"https://github.com/abtassociates/mecvision\"}},[_vm._v(\"project page\")]),_vm._v(\" if you would like to contribute to the MECVision project or adapt it for your own purposes.\")]),_c('p',[_vm._v(\"MECVision was aided in being made possible by the generous support of the American people through the \"),_c('a',{attrs:{\"href\":\"https://www.usaid.gov\"}},[_vm._v(\"United States Agency for International Development (USAID)\")]),_vm._v(\" and is implemented under the \"),_c('a',{attrs:{\"href\":\"https://www.usaid.gov/documents/1862/zika-airs-project-zap\"}},[_vm._v(\"Zika AIRS Project\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"The information on this website and web app does not necessarily represent the views of USAID or the United States Government.\")])])])])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n<div>\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-3\">About</h3>\r\n          <div>\r\n            <p>MECVision is a Progressive Web App (PWA) that uses computer vision (object detection) to estimate the number of mosquito eggs on ovitrap paper.</p>\r\n            <p>Check out the <a href=\"https://github.com/abtassociates/mecvision\">project page</a> if you would like to contribute to the MECVision project or adapt it for your own purposes.</p>\r\n            <p>MECVision was aided in being made possible by the generous support of the American people through the <a href=\"https://www.usaid.gov\">United States Agency for International Development (USAID)</a> and is implemented under the <a href=\"https://www.usaid.gov/documents/1862/zika-airs-project-zap\">Zika AIRS Project</a>.</p>\r\n            <p>The information on this website and web app does not necessarily represent the views of USAID or the United States Government.</p>\r\n\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=d9fc601e&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-layout',{attrs:{\"my-3\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"offset-sm3\":\"\"}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-3\"},[_vm._v(\"Acerca De...\")]),_c('div',[_c('p',[_vm._v(\"MECVision es una aplicación web progresiva (PWA) que utiliza la visión por computadora (detección de objetos) para estimar la cantidad de huevos de mosquito en papel ovitraprap.\")]),_c('p',[_vm._v(\"Consulte la \"),_c('a',{attrs:{\"href\":\"https://github.com/abtassociates/mecvision\"}},[_vm._v(\"página del proyecto\")]),_vm._v(\" si desea contribuir al proyecto MECVision o adaptarlo para sus propios fines.\")]),_c('p',[_vm._v(\" MECVision se hizo posible gracias al generoso apoyo del pueblo estadounidense a través de la \"),_c('a',{attrs:{\"href\":\"https://www.usaid.gov\"}},[_vm._v(\" Agencia de los Estados Unidos para el Desarrollo Internacional (USAID) \")]),_vm._v(\" y se implementa bajo el \"),_c('a',{attrs:{\"href\":\"https://www.usaid.gov/documents/1862/zika-airs-project-zap\"}},[_vm._v(\" Proyecto Zika AIRS \")]),_vm._v(\".\")]),_c('p',[_vm._v(\" La información en este sitio web y aplicación web no representa necesariamente los puntos de vista de USAID o del Gobierno de los Estados Unidos. \")])])])])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n<div>\r\n<v-layout my-3>\r\n  <v-flex xs12 sm6 offset-sm3>\r\n    <v-card>\r\n      <v-card-title primary-title>\r\n        <div>\r\n          <h3 class=\"headline mb-3\">Acerca De...</h3>\r\n          <div>\r\n            <p>MECVision es una aplicación web progresiva (PWA) que utiliza la visión por computadora (detección de objetos) para estimar la cantidad de huevos de mosquito en papel ovitraprap.</p>\r\n            <p>Consulte la <a href=\"https://github.com/abtassociates/mecvision\">página del proyecto</a> si desea contribuir al proyecto MECVision o adaptarlo para sus propios fines.</p>\r\n            <p> MECVision se hizo posible gracias al generoso apoyo del pueblo estadounidense a través de la <a href=\"https://www.usaid.gov\"> Agencia de los Estados Unidos para el Desarrollo Internacional (USAID) </a> y se implementa bajo el <a href=\"https://www.usaid.gov/documents/1862/zika-airs-project-zap\"> Proyecto Zika AIRS </a>.</p>\r\n            <p> La información en este sitio web y aplicación web no representa necesariamente los puntos de vista de USAID o del Gobierno de los Estados Unidos. </p>\r\n          </div>\r\n        </div>\r\n      </v-card-title>\r\n    </v-card>\r\n  </v-flex>\r\n</v-layout>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About-es.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About-es.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About-es.vue?vue&type=template&id=80e0e53c&\"\nimport script from \"./About-es.vue?vue&type=script&lang=js&\"\nexport * from \"./About-es.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport AppVision from './components/Vision.vue'\r\nimport AppGuide from './components/Guide.vue'\r\nimport AppGuideEs from './components/Guide-es.vue'\r\nimport AppAbout from './components/About.vue'\r\nimport AppAboutEs from './components/About-es.vue'\r\n\r\nVue.use(Router)\r\n\r\n// The 'vision' component holds both the image and analysis steps, whereas 'guide' and 'about' take you to those specific pages.\r\n\r\nexport default new Router({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'vision',\r\n      component: AppVision\r\n    },\r\n    {\r\n      path: '/guide',\r\n      name: 'guide',\r\n      component: AppGuide\r\n    },\r\n    {\r\n      path: '/guide-es',\r\n      name: 'guide-es',\r\n      component: AppGuideEs\r\n    },\r\n    {\r\n      path: '/about',\r\n      name: 'about',\r\n      component: AppAbout\r\n    },\r\n    {\r\n      path: '/about-es',\r\n      name: 'about-es',\r\n      component: AppAboutEs\r\n    }\r\n  ]\r\n})\r\n","import Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport App from './App.vue'\nimport i18n from '@/plugins/i18n'\nimport './registerServiceWorker'\nimport 'vue-croppa/dist/vue-croppa.css'\nimport Croppa from 'vue-croppa'\nimport 'vuetify/dist/vuetify.min.css'\nimport colors from 'vuetify/es5/util/colors'\nimport router from './router'\n\nVue.use(Croppa)\nVue.use(Vuetify, {\n  theme: {\n    primary: colors.blue.darken4, // #90A4AE\n    secondary: colors.lightBlue.darken4, // #FFCDD2\n    accent: colors.red.accent2 // #3F51B5\n  },\n  options: {\n    customProperties: true\n  }\n})\n\nVue.config.productionTip = false\n\n// Vue.prototype.$bus = new Vue()\n\nexport const eventBus = new Vue()\n\nnew Vue({\n  i18n,\n  router,\n  render: h => h(App)\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Analysis.vue?vue&type=style&index=0&scope=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Analysis.vue?vue&type=style&index=0&scope=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Image.vue?vue&type=style&index=0&scope=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Image.vue?vue&type=style&index=0&scope=true&lang=css&\""],"sourceRoot":""}